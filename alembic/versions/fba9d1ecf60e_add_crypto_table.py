"""Add crypto table

Revision ID: fba9d1ecf60e
Revises: a857b74cd7a5
Create Date: 2025-07-14 21:27:43.505068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'fba9d1ecf60e'
down_revision: Union[str, None] = 'a857b74cd7a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('id_counter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_value', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('order_id'), table_name='userorders')
    op.drop_table('userorders')
    op.create_index(op.f('ix_demo_user_orders_cancel_id'), 'demo_user_orders', ['cancel_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_close_id'), 'demo_user_orders', ['close_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_modify_id'), 'demo_user_orders', ['modify_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_stoploss_cancel_id'), 'demo_user_orders', ['stoploss_cancel_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_stoploss_id'), 'demo_user_orders', ['stoploss_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_takeprofit_cancel_id'), 'demo_user_orders', ['takeprofit_cancel_id'], unique=False)
    op.create_index(op.f('ix_demo_user_orders_takeprofit_id'), 'demo_user_orders', ['takeprofit_id'], unique=False)
    op.create_index(op.f('ix_user_orders_cancel_id'), 'user_orders', ['cancel_id'], unique=True)
    op.create_index(op.f('ix_user_orders_close_id'), 'user_orders', ['close_id'], unique=True)
    op.create_index(op.f('ix_user_orders_modify_id'), 'user_orders', ['modify_id'], unique=True)
    op.create_index(op.f('ix_user_orders_stoploss_cancel_id'), 'user_orders', ['stoploss_cancel_id'], unique=True)
    op.create_index(op.f('ix_user_orders_stoploss_id'), 'user_orders', ['stoploss_id'], unique=True)
    op.create_index(op.f('ix_user_orders_takeprofit_cancel_id'), 'user_orders', ['takeprofit_cancel_id'], unique=True)
    op.create_index(op.f('ix_user_orders_takeprofit_id'), 'user_orders', ['takeprofit_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_orders_takeprofit_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_takeprofit_cancel_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_stoploss_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_stoploss_cancel_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_modify_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_close_id'), table_name='user_orders')
    op.drop_index(op.f('ix_user_orders_cancel_id'), table_name='user_orders')
    op.drop_index(op.f('ix_demo_user_orders_takeprofit_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_takeprofit_cancel_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_stoploss_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_stoploss_cancel_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_modify_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_close_id'), table_name='demo_user_orders')
    op.drop_index(op.f('ix_demo_user_orders_cancel_id'), table_name='demo_user_orders')
    op.create_table('userorders',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_status', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_user_id', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_company_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_price', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('order_quantity', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('contract_value', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('margin', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('net_profit', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('close_price', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('swap', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('commission', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('stop_loss', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('take_profit', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('cancel_message', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('close_message', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('status', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.Column('created_at', mysql.DATETIME(fsp=6), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(fsp=6), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('order_id'), 'userorders', ['order_id'], unique=True)
    op.drop_table('id_counter')
    # ### end Alembic commands ###
