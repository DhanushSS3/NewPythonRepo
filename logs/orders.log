2025-07-06 21:12:08,504 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 21:12:08,506 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 21:12:32,143 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 21:12:32,143 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:09:52,228 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:09:52,229 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:10:08,433 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:10:08,433 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:10:47,919 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:10:47,920 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:10:53,256 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:10:53,256 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:11:04,479 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:11:04,479 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:11:08,343 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:11:08,343 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:19:08,615 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:19:08,615 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:19:12,272 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:19:12,272 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:20:39,152 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-07-06 23:23:33,390 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:23:33,390 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:23:42,366 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:23:42,366 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-06 23:42:35,954 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-07-06 23:59:50,155 - INFO - orders - Application starting up - Orders logging initialized
2025-07-06 23:59:50,155 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:06:11,044 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 00:06:11,044 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:06:25,004 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 00:06:25,004 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:11:04,207 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 00:11:04,207 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:12:36,492 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 00:12:36,493 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:13:00,783 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 00:13:00,784 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 00:13:07,768 - INFO - orders - Starting the pending order checker background task.
2025-07-07 00:13:07,769 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 00:13:09,873 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:12,287 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:14,672 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:16,893 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:19,549 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:21,484 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:23,813 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:26,102 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:27,803 - INFO - orders - Order placement request received - User: 4, Symbol: AUDCAD, Type: BUY
2025-07-07 00:13:28,146 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8888700000', 'o': '0.8888100000'}
2025-07-07 00:13:28,146 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8888700000, ask=0.88895888700000
2025-07-07 00:13:28,146 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8888700000, ask=0.88895888700000
2025-07-07 00:13:28,147 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.89 CAD to USD for margin_calculation (user_id: 4, position: None)
2025-07-07 00:13:28,147 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-07 00:13:28,148 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 00:13:28,148 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-07 00:13:28,148 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-07 00:13:28,148 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3646600000'), 'o': Decimal('1.3646100000')}
2025-07-07 00:13:28,149 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3646600000
2025-07-07 00:13:28,149 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.89 CAD / 1.3646600000 = 6.514443158002725953717409465 USD
2025-07-07 00:13:28,149 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.88895888700000, Margin: 6.514443158002725953717409465, Commission: 0.00
2025-07-07 00:13:28,149 - INFO - orders - [PERF] Order processing: 0.3326s
2025-07-07 00:13:28,150 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '9066577232', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88895888700000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.514443158002725953717409465'), 'commission': Decimal('0.00'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-07 00:13:28,150 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 9066577232
2025-07-07 00:13:28,223 - INFO - orders - [PERF] Order creation: 0.0742s
2025-07-07 00:13:28,224 - INFO - orders - is_barclays_live_user in place_order: True
2025-07-07 00:13:28,224 - INFO - orders - [BARCLAYS] Scheduling barclays_push in place_order
2025-07-07 00:13:28,224 - INFO - orders - Publishing order update for user 4
2025-07-07 00:13:28,225 - INFO - orders - Publishing user data update for user 4
2025-07-07 00:13:28,226 - INFO - orders - Publishing market data trigger
2025-07-07 00:13:28,227 - INFO - orders - [PERF] TOTAL place_order: 0.4257s
2025-07-07 00:13:28,228 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:28,258 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-07 00:13:28,261 - INFO - orders - [BARCLAYS] barclays_push called in place_order
2025-07-07 00:13:28,264 - DEBUG - orders - [BARCLAYS] Calling send_order_to_firebase with data: {'order_id': '9066577232', 'user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': 0.01, 'price': 0.888958887, 'status': 'OPEN', 'contract_value': 1000.0}
2025-07-07 00:13:28,661 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:30,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:33,090 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:35,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:37,661 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 00:13:39,925 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:37,098 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 01:36:37,099 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 01:36:44,000 - INFO - orders - Starting the pending order checker background task.
2025-07-07 01:36:44,002 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 01:36:46,874 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:48,481 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:50,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:53,074 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:55,442 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:57,692 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:36:59,998 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:02,419 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:04,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:07,019 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:09,275 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:11,614 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:13,875 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:16,128 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:18,499 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:20,738 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:23,009 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:25,335 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:28,104 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:29,335 - INFO - orders - Order close request received - Order ID: 1621588803, User ID: 4, Close Price: 94.298
2025-07-07 01:37:29,336 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000002403B825E50>, type: <class 'app.database.models.User'>, user_type: live, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 01:37:29,336 - INFO - orders - Using order model: user_orders for user 4 (user_type: live)
2025-07-07 01:37:29,336 - INFO - orders - Request to close order 1621588803 for user 4 (user_type: live) with price 94.298. Frontend provided type: BUY, company: AUDJPY, status: CLOSED, frontend_status: CLOSED.
2025-07-07 01:37:29,341 - INFO - orders - User group: Standard, sending_orders setting: barclays
2025-07-07 01:37:29,342 - INFO - orders - Live user 4 from group 'Standard' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-07-07 01:37:29,349 - INFO - orders - [FIREBASE_CLOSE_REQUEST] Preparing to send payload for user-initiated close: {'order_id': '1621588803', 'close_price': '94.298', 'user_id': 4, 'order_type': 'BUY', 'order_company_name': 'AUDJPY', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'order_status': 'CLOSED', 'status': 'CLOSED', 'action': 'close_order', 'close_id': '2392229723'}
2025-07-07 01:37:30,569 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:32,807 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:35,117 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:37,614 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:39,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:42,009 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:44,379 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:46,647 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:48,991 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:51,261 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:53,573 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:55,868 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:37:58,212 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:00,576 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:02,828 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:05,064 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:07,467 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:09,690 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:12,348 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:14,713 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:16,908 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:19,194 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:21,476 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:23,810 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:26,103 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:28,401 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:30,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:32,986 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:35,393 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:37,608 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:39,890 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:42,165 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:44,460 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:46,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:49,058 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:51,342 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:53,661 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:55,955 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:38:58,244 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:00,561 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:02,881 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:05,141 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:07,430 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:09,790 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:12,022 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:14,576 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:16,925 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 01:39:19,208 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:09:41,356 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 03:09:41,356 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 03:09:48,445 - INFO - orders - Starting the pending order checker background task.
2025-07-07 03:09:48,446 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 03:09:48,577 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:09:51,312 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:09:53,190 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:09:55,542 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:09:57,783 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:00,151 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:02,490 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:04,756 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:07,025 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:09,373 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:11,636 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:13,960 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:16,216 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:18,480 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:20,824 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:21,064 - INFO - orders - Order placement request received - User: 4, Symbol: USDNOK, Type: BUY
2025-07-07 03:10:21,452 - INFO - orders - [MARGIN_CALC] Market data for USDNOK: {'b': '10.1400000000', 'o': '10.1388100000'}
2025-07-07 03:10:21,452 - WARNING - orders - [MARGIN_CALC] Missing ask price for USDNOK, using bid price with spread: bid=10.1400000000, ask=10.14101400000000
2025-07-07 03:10:21,453 - INFO - orders - [MARGIN_CALC] Using prices for USDNOK: bid=10.1400000000, ask=10.14101400000000
2025-07-07 03:10:21,456 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 101.41 NOK to USD for margin_calculation (user_id: 4, position: None)
2025-07-07 03:10:21,456 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: NOKUSD
2025-07-07 03:10:21,460 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 03:10:21,460 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for NOKUSD, trying inverse
2025-07-07 03:10:21,460 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDNOK
2025-07-07 03:10:21,463 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('10.1177400000'), 'o': Decimal('10.1162600000')}
2025-07-07 03:10:21,464 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 10.1177400000
2025-07-07 03:10:21,464 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 101.41 NOK / 10.1177400000 = 10.02298932370272412613884128 USD
2025-07-07 03:10:21,464 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: USDNOK, Type: BUY, Qty: 0.01, Price: 10.14101400000000, Margin: 10.02298932370272412613884128, Commission: 0.10
2025-07-07 03:10:21,469 - INFO - orders - [PERF] Order processing: 0.3873s
2025-07-07 03:10:21,470 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '7270472652', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'USDNOK', 'order_type': 'BUY', 'order_price': Decimal('10.14101400000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('10.02298932370272412613884128'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-07 03:10:21,471 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 7270472652
2025-07-07 03:10:21,715 - INFO - orders - [PERF] Order creation: 0.2457s
2025-07-07 03:10:21,716 - INFO - orders - is_barclays_live_user in place_order: True
2025-07-07 03:10:21,716 - INFO - orders - [BARCLAYS] Scheduling barclays_push in place_order
2025-07-07 03:10:21,717 - INFO - orders - Publishing order update for user 4
2025-07-07 03:10:21,722 - INFO - orders - Publishing user data update for user 4
2025-07-07 03:10:21,730 - INFO - orders - Publishing market data trigger
2025-07-07 03:10:21,734 - INFO - orders - [PERF] TOTAL place_order: 0.6704s
2025-07-07 03:10:21,735 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:21,761 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-07 03:10:21,772 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-07 03:10:21,787 - INFO - orders - [BARCLAYS] barclays_push called in place_order
2025-07-07 03:10:21,807 - DEBUG - orders - [BARCLAYS] Calling send_order_to_firebase with data: {'order_id': '7270472652', 'user_id': 4, 'order_company_name': 'USDNOK', 'order_type': 'BUY', 'order_quantity': 0.01, 'price': 10.141014, 'status': 'OPEN', 'contract_value': 1000.0}
2025-07-07 03:10:23,273 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:25,544 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:27,995 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:30,231 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:32,497 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:34,745 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:37,094 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:39,482 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:41,900 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:43,976 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:46,256 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:48,454 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:50,821 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:53,075 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:55,323 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:57,670 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:10:59,991 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:02,281 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:04,636 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:06,895 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:09,345 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:11,644 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:13,950 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:16,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:18,563 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:20,854 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:23,143 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:25,526 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:27,779 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:30,008 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:32,279 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:34,582 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:36,857 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:39,160 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:41,460 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:43,752 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:46,041 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:48,366 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:50,717 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:52,965 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:54,484 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:11:55,324 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:57,576 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:11:59,931 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:02,191 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:04,440 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:06,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:07,202 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:09,185 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:09,254 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:11,166 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:11,347 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:12,925 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:13,616 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:15,313 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:15,899 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:17,049 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:18,259 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:18,946 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:20,512 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:20,554 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:22,680 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:22,818 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:24,350 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:25,129 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:27,070 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:27,374 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:29,191 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:29,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:31,044 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:31,986 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:32,834 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:12:34,252 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:36,593 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:38,837 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:41,150 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:43,452 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:46,524 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:48,771 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:51,127 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:53,381 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:55,651 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:12:57,886 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:00,244 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:02,507 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:04,855 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:07,101 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:09,356 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:11,715 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:13,922 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:16,227 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:18,575 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:20,823 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:23,179 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:25,432 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:27,683 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:29,977 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:32,295 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:34,546 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:36,807 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:39,159 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:41,407 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:43,671 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:45,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:48,276 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:50,623 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:52,875 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:55,241 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:57,483 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:13:59,843 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:02,091 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:04,450 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:06,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:09,054 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:11,415 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:13,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:15,959 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:18,370 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:20,572 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:22,884 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:25,231 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:27,489 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:29,753 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:32,099 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:34,449 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:36,644 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:14:38,954 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:22:56,391 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 03:22:56,391 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 03:23:01,298 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:01,316 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:03,270 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:03,289 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:03,362 - INFO - orders - Starting the pending order checker background task.
2025-07-07 03:23:03,364 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 03:23:04,992 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:05,041 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:05,044 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:07,363 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:09,656 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:11,988 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:14,846 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:16,098 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:16,110 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:17,110 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:18,398 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:18,407 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:19,424 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:21,703 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:23,982 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:26,003 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:26,014 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:26,315 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:27,518 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:27,529 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:28,586 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:29,091 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:29,115 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:30,392 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:23:30,402 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:23:31,010 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:33,298 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:23:35,611 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:30:25,270 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 03:30:25,271 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 03:30:30,574 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:30:30,593 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:30:32,082 - INFO - orders - Starting the pending order checker background task.
2025-07-07 03:30:32,083 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 03:30:32,333 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:30:32,386 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:30:32,477 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:30:34,274 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:30:34,282 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:30:34,651 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:30:35,901 - INFO - orders - Service provider order info request for order_id: 7270472652, symbol: USDNOK
2025-07-07 03:30:35,909 - INFO - orders - [CACHE HIT] Group-symbol settings for group 'Standard', symbol 'USDNOK' found in Redis cache.
2025-07-07 03:30:36,915 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 03:30:39,164 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:33,189 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 23:45:33,189 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 23:45:40,009 - INFO - orders - Starting the pending order checker background task.
2025-07-07 23:45:40,010 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 23:45:41,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:43,525 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:45,782 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:48,048 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:50,376 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:52,628 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:54,967 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:57,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:45:57,423 - INFO - orders - Cancel stoploss request received - Order ID: 9058837501, User ID: 1
2025-07-07 23:45:57,457 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-07 23:45:57,488 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-07 23:45:57,488 - INFO - orders - Using order model: DemoUserOrder
2025-07-07 23:45:57,492 - INFO - orders - Fetched 5 open orders for user 1
2025-07-07 23:45:57,496 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-07 23:45:57,498 - INFO - orders - Updated static orders cache for user 1 with 5 open orders and 1 pending orders
2025-07-07 23:45:59,485 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:01,314 - INFO - orders - Order close request received - Order ID: 2208540910, User ID: 1, Close Price: 1.27743
2025-07-07 23:46:01,314 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258D5B0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:01,314 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:01,315 - INFO - orders - Request to close order 2208540910 for user 1 (user_type: demo) with price 1.27743. Frontend provided type: BUY, company: USDSGD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:01,343 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:01,385 - INFO - orders - Existing entry commission for order 2208540910: 0.10000000
2025-07-07 23:46:01,385 - INFO - orders - Commission calculation for order 2208540910: entry=0.10000000, exit=0.0, total=0.10
2025-07-07 23:46:01,387 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.012270000000000000000000 SGD to USD for PnL on Close (user_id: 1, position: 2208540910)
2025-07-07 23:46:01,389 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: SGDUSD
2025-07-07 23:46:01,391 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:01,391 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for SGDUSD, trying inverse
2025-07-07 23:46:01,391 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDSGD
2025-07-07 23:46:01,392 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:01,392 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDSGD
2025-07-07 23:46:01,392 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for SGD to USD for PnL on Close
2025-07-07 23:46:01,392 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: 0.012270000000000000000000 SGD
2025-07-07 23:46:01,393 - ERROR - orders - Order 2208540910: PnL conversion failed. Rates missing for SGD/USD.
2025-07-07 23:46:01,393 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:46:01,403 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:46:01,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:02,912 - INFO - orders - Order close request received - Order ID: 2208540910, User ID: 1, Close Price: 1.27741
2025-07-07 23:46:02,912 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258D480>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:02,913 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:02,914 - INFO - orders - Request to close order 2208540910 for user 1 (user_type: demo) with price 1.27741. Frontend provided type: BUY, company: USDSGD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:02,922 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:02,941 - INFO - orders - Existing entry commission for order 2208540910: 0.10000000
2025-07-07 23:46:02,941 - INFO - orders - Commission calculation for order 2208540910: entry=0.10000000, exit=0.0, total=0.10
2025-07-07 23:46:02,942 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.007730000000000000000000 SGD to USD for PnL on Close (user_id: 1, position: 2208540910)
2025-07-07 23:46:02,942 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: SGDUSD
2025-07-07 23:46:02,943 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:02,944 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for SGDUSD, trying inverse
2025-07-07 23:46:02,944 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDSGD
2025-07-07 23:46:02,944 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:02,945 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDSGD
2025-07-07 23:46:02,945 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for SGD to USD for PnL on Close
2025-07-07 23:46:02,945 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.007730000000000000000000 SGD
2025-07-07 23:46:02,945 - ERROR - orders - Order 2208540910: PnL conversion failed. Rates missing for SGD/USD.
2025-07-07 23:46:02,945 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:46:02,948 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:46:04,044 - INFO - orders - Order close request received - Order ID: 4231664232, User ID: 1, Close Price: 0.99975
2025-07-07 23:46:04,044 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258CE90>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:04,044 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:04,044 - INFO - orders - Request to close order 4231664232 for user 1 (user_type: demo) with price 0.99975. Frontend provided type: BUY, company: AUDNZD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:04,053 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:04,072 - INFO - orders - Existing entry commission for order 4231664232: 0.10000000
2025-07-07 23:46:04,072 - INFO - orders - Commission calculation for order 4231664232: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:46:04,072 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.350000000000000000000000 NZD to USD for PnL on Close (user_id: 1, position: 4231664232)
2025-07-07 23:46:04,072 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: NZDUSD
2025-07-07 23:46:04,074 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:04,074 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for NZDUSD, trying inverse
2025-07-07 23:46:04,074 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDNZD
2025-07-07 23:46:04,076 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:04,076 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDNZD
2025-07-07 23:46:04,076 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for NZD to USD for PnL on Close
2025-07-07 23:46:04,076 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.350000000000000000000000 NZD
2025-07-07 23:46:04,076 - ERROR - orders - Order 4231664232: PnL conversion failed. Rates missing for NZD/USD.
2025-07-07 23:46:04,076 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from NZD to USD.
2025-07-07 23:46:04,079 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from NZD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
2025-07-07 23:46:04,299 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:05,466 - INFO - orders - Order close request received - Order ID: 7436343800, User ID: 1, Close Price: 0.8927
2025-07-07 23:46:05,466 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258D810>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:05,466 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:05,466 - INFO - orders - Request to close order 7436343800 for user 1 (user_type: demo) with price 0.8927. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:05,481 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:05,501 - INFO - orders - Existing entry commission for order 7436343800: 0.10000000
2025-07-07 23:46:05,502 - INFO - orders - Commission calculation for order 7436343800: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:46:05,502 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.440000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7436343800)
2025-07-07 23:46:05,502 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-07 23:46:05,503 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:05,503 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-07 23:46:05,503 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-07 23:46:05,504 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:05,505 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDCAD
2025-07-07 23:46:05,505 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for CAD to USD for PnL on Close
2025-07-07 23:46:05,505 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.440000000000000000000000 CAD
2025-07-07 23:46:05,505 - ERROR - orders - Order 7436343800: PnL conversion failed. Rates missing for CAD/USD.
2025-07-07 23:46:05,505 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:05,507 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:06,553 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:07,784 - INFO - orders - Order close request received - Order ID: 6508105504, User ID: 1, Close Price: 0.89253
2025-07-07 23:46:07,784 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258CE90>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:07,784 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:07,784 - INFO - orders - Request to close order 6508105504 for user 1 (user_type: demo) with price 0.89253. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:07,799 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:07,820 - INFO - orders - Existing entry commission for order 6508105504: 0.10000000
2025-07-07 23:46:07,821 - INFO - orders - Commission calculation for order 6508105504: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:46:07,821 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.180000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 6508105504)
2025-07-07 23:46:07,821 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-07 23:46:07,822 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:07,823 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-07 23:46:07,823 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-07 23:46:07,824 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:07,824 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDCAD
2025-07-07 23:46:07,824 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for CAD to USD for PnL on Close
2025-07-07 23:46:07,824 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.180000000000000000000000 CAD
2025-07-07 23:46:07,825 - ERROR - orders - Order 6508105504: PnL conversion failed. Rates missing for CAD/USD.
2025-07-07 23:46:07,825 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:07,828 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:08,806 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:09,317 - INFO - orders - Order close request received - Order ID: 9058837501, User ID: 1, Close Price: 0.89249
2025-07-07 23:46:09,317 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000188D258D0F0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:46:09,317 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:46:09,318 - INFO - orders - Request to close order 9058837501 for user 1 (user_type: demo) with price 0.89249. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:46:09,335 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:46:09,352 - INFO - orders - Existing entry commission for order 9058837501: 0.10000000
2025-07-07 23:46:09,352 - INFO - orders - Commission calculation for order 9058837501: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:46:09,352 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.120770000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 9058837501)
2025-07-07 23:46:09,352 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-07 23:46:09,353 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:46:09,353 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-07 23:46:09,353 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-07 23:46:09,354 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:46:09,354 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDCAD
2025-07-07 23:46:09,354 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for CAD to USD for PnL on Close
2025-07-07 23:46:09,355 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: 0.120770000000000000000000 CAD
2025-07-07 23:46:09,355 - ERROR - orders - Order 9058837501: PnL conversion failed. Rates missing for CAD/USD.
2025-07-07 23:46:09,355 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:09,357 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:46:11,062 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:13,323 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:15,663 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:17,927 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:20,135 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:22,404 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:24,786 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:27,016 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:29,218 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:31,535 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:33,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:36,036 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:38,403 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:40,647 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:42,895 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:45,265 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:47,711 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:49,978 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:52,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:54,479 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:56,757 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:46:59,033 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:01,333 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:04,158 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:05,912 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:08,133 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:10,425 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:12,695 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:14,972 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:17,308 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:19,536 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:21,801 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:47:24,082 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:51:46,978 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 23:51:46,978 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 23:52:01,269 - INFO - orders - Starting the pending order checker background task.
2025-07-07 23:52:01,270 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 23:52:01,875 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:04,143 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:06,422 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:08,692 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:10,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:13,261 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:15,538 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:17,838 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:20,078 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:22,348 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:23,781 - INFO - orders - Order close request received - Order ID: 2208540910, User ID: 1, Close Price: 1.27725
2025-07-07 23:52:23,781 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000020E92C3A650>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:52:23,781 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:52:23,781 - INFO - orders - Request to close order 2208540910 for user 1 (user_type: demo) with price 1.27725. Frontend provided type: BUY, company: USDSGD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:52:23,799 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:52:23,838 - INFO - orders - Existing entry commission for order 2208540910: 0.10000000
2025-07-07 23:52:23,838 - INFO - orders - Commission calculation for order 2208540910: entry=0.10000000, exit=0.0, total=0.10
2025-07-07 23:52:23,839 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.167730000000000000000000 SGD to USD for PnL on Close (user_id: 1, position: 2208540910)
2025-07-07 23:52:23,839 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: SGDUSD
2025-07-07 23:52:23,839 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:52:23,839 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for SGDUSD, trying inverse
2025-07-07 23:52:23,839 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDSGD
2025-07-07 23:52:23,840 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:52:23,840 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDSGD
2025-07-07 23:52:23,840 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for SGD to USD for PnL on Close
2025-07-07 23:52:23,840 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.167730000000000000000000 SGD
2025-07-07 23:52:23,841 - ERROR - orders - Order 2208540910: PnL conversion failed. Rates missing for SGD/USD.
2025-07-07 23:52:23,841 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:52:23,845 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:52:24,618 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:26,886 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:29,153 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:31,424 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:31,741 - INFO - orders - Order close request received - Order ID: 9058837501, User ID: 1, Close Price: 0.89218
2025-07-07 23:52:31,742 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000020E92C3B230>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:52:31,742 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:52:31,742 - INFO - orders - Request to close order 9058837501 for user 1 (user_type: demo) with price 0.89218. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:52:31,798 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:52:31,812 - INFO - orders - Existing entry commission for order 9058837501: 0.10000000
2025-07-07 23:52:31,812 - INFO - orders - Commission calculation for order 9058837501: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:52:31,812 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.189230000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 9058837501)
2025-07-07 23:52:31,812 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-07 23:52:31,813 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:52:31,814 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-07 23:52:31,814 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-07 23:52:31,816 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:52:31,816 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDCAD
2025-07-07 23:52:31,816 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for CAD to USD for PnL on Close
2025-07-07 23:52:31,816 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.189230000000000000000000 CAD
2025-07-07 23:52:31,816 - ERROR - orders - Order 9058837501: PnL conversion failed. Rates missing for CAD/USD.
2025-07-07 23:52:31,816 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:52:31,818 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-07 23:52:33,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:35,974 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:38,230 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:40,588 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:42,835 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:45,095 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:47,540 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:49,613 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:51,879 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:54,208 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:56,552 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:52:58,809 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:00,981 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:03,262 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:05,567 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:07,817 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:10,177 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:12,427 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:14,672 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:16,934 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:19,187 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:21,429 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:23,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:26,049 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:28,293 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:30,554 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:32,816 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:35,070 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:37,338 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:39,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:41,920 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:44,170 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:46,435 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:48,736 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:51,029 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:53,256 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:55,538 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:53:57,895 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:00,081 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:02,399 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:05,162 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:07,416 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:09,654 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:11,923 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:14,188 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:16,465 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:18,783 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:21,043 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:23,271 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:25,542 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:27,823 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:30,147 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:32,400 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:34,653 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:37,006 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:39,239 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:41,511 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:43,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:45,980 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:48,272 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:50,633 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:52,818 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:55,084 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:57,350 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:54:59,623 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:01,998 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:04,198 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:06,497 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:08,758 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:11,003 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:55:13,267 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:57:46,603 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 23:57:46,603 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 23:57:51,153 - INFO - orders - Order close request received - Order ID: 2208540910, User ID: 1, Close Price: 1.27713
2025-07-07 23:57:51,154 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000020432941400>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:57:51,154 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:57:51,154 - INFO - orders - Request to close order 2208540910 for user 1 (user_type: demo) with price 1.27713. Frontend provided type: BUY, company: USDSGD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:57:51,170 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:57:51,196 - INFO - orders - Existing entry commission for order 2208540910: 0.10000000
2025-07-07 23:57:51,196 - INFO - orders - Commission calculation for order 2208540910: entry=0.10000000, exit=0.0, total=0.10
2025-07-07 23:57:51,197 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.287730000000000000000000 SGD to USD for PnL on Close (user_id: 1, position: 2208540910)
2025-07-07 23:57:51,197 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: SGDUSD
2025-07-07 23:57:51,197 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:57:51,197 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for SGDUSD, trying inverse
2025-07-07 23:57:51,197 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDSGD
2025-07-07 23:57:51,198 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:57:51,198 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDSGD
2025-07-07 23:57:51,199 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for SGD to USD for PnL on Close
2025-07-07 23:57:51,199 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.287730000000000000000000 SGD
2025-07-07 23:57:51,199 - ERROR - orders - Order 2208540910: PnL conversion failed. Rates missing for SGD/USD.
2025-07-07 23:57:51,199 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:57:51,204 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from SGD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from SGD to USD.
2025-07-07 23:57:53,819 - INFO - orders - Starting the pending order checker background task.
2025-07-07 23:57:53,822 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 23:57:53,941 - INFO - orders - Order close request received - Order ID: 4231664232, User ID: 1, Close Price: 0.99975
2025-07-07 23:57:53,941 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000020432A63B10>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:57:53,941 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-07 23:57:53,941 - INFO - orders - Request to close order 4231664232 for user 1 (user_type: demo) with price 0.99975. Frontend provided type: BUY, company: AUDNZD, status: CLOSED, frontend_status: CLOSED.
2025-07-07 23:57:53,953 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-07 23:57:53,980 - INFO - orders - Existing entry commission for order 4231664232: 0.10000000
2025-07-07 23:57:53,980 - INFO - orders - Commission calculation for order 4231664232: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-07 23:57:53,980 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.350000000000000000000000 NZD to USD for PnL on Close (user_id: 1, position: 4231664232)
2025-07-07 23:57:53,980 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: NZDUSD
2025-07-07 23:57:53,981 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:57:53,981 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for NZDUSD, trying inverse
2025-07-07 23:57:53,982 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDNZD
2025-07-07 23:57:53,986 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:57:53,986 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDNZD
2025-07-07 23:57:53,986 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for NZD to USD for PnL on Close
2025-07-07 23:57:53,986 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.350000000000000000000000 NZD
2025-07-07 23:57:53,986 - ERROR - orders - Order 4231664232: PnL conversion failed. Rates missing for NZD/USD.
2025-07-07 23:57:53,986 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from NZD to USD.
2025-07-07 23:57:53,988 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from NZD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from NZD to USD.
2025-07-07 23:57:55,269 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:57:57,625 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:57:59,806 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:02,114 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:04,376 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:06,724 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:08,923 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:11,161 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:13,482 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:15,705 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:19,741 - INFO - orders - Application starting up - Orders logging initialized
2025-07-07 23:58:19,742 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-07 23:58:26,476 - INFO - orders - Starting the pending order checker background task.
2025-07-07 23:58:26,476 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-07 23:58:27,104 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:29,464 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:31,666 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:33,975 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:36,351 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:38,514 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:40,762 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:43,050 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:44,616 - INFO - orders - Order close request received - Order ID: 6866600215, User ID: 4, Close Price: 0
2025-07-07 23:58:44,617 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000017C795FD810>, type: <class 'app.database.models.User'>, user_type: live, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-07 23:58:44,617 - INFO - orders - Using order model: user_orders for user 4 (user_type: live)
2025-07-07 23:58:44,617 - ERROR - orders - Error in close_order endpoint: 400: Close price must be positive.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1038, in close_order
    raise HTTPException(status_code=400, detail="Close price must be positive.")
fastapi.exceptions.HTTPException: 400: Close price must be positive.
2025-07-07 23:58:45,324 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:47,600 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:49,898 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:52,163 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:54,458 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:56,814 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:58:59,062 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:01,312 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:03,537 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:05,808 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:08,073 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:10,353 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:12,626 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:14,965 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:17,186 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:19,463 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:21,887 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:24,273 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:26,579 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:28,835 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:31,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:33,487 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:35,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:37,975 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:40,276 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:42,514 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:44,778 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:47,045 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:48,369 - INFO - orders - Order placement request received - User: 4, Symbol: EURAUD, Type: BUY
2025-07-07 23:59:48,720 - INFO - orders - [MARGIN_CALC] Market data for EURAUD: {'b': '1.7979200000', 'o': '1.7978100000'}
2025-07-07 23:59:48,720 - WARNING - orders - [MARGIN_CALC] Missing ask price for EURAUD, using bid price with spread: bid=1.7979200000, ask=1.79809979200000
2025-07-07 23:59:48,720 - INFO - orders - [MARGIN_CALC] Using prices for EURAUD: bid=1.7979200000, ask=1.79809979200000
2025-07-07 23:59:48,723 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 17.98 AUD to USD for margin_calculation (user_id: 4, position: None)
2025-07-07 23:59:48,723 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-07 23:59:48,724 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-07 23:59:48,724 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-07 23:59:48,724 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-07 23:59:48,725 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-07 23:59:48,725 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-07 23:59:48,725 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for margin_calculation
2025-07-07 23:59:48,725 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: 17.98 AUD
2025-07-07 23:59:48,725 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: EURAUD, Type: BUY, Qty: 0.01, Price: 1.79809979200000, Margin: 17.98, Commission: 0.10
2025-07-07 23:59:48,726 - INFO - orders - [PERF] Order processing: 0.3358s
2025-07-07 23:59:48,726 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '4409176803', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'EURAUD', 'order_type': 'BUY', 'order_price': Decimal('1.79809979200000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('17.98'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-07 23:59:48,727 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 4409176803
2025-07-07 23:59:48,792 - INFO - orders - [PERF] Order creation: 0.0659s
2025-07-07 23:59:48,792 - INFO - orders - is_barclays_live_user in place_order: True
2025-07-07 23:59:48,792 - INFO - orders - [BARCLAYS] Scheduling barclays_push in place_order
2025-07-07 23:59:48,792 - INFO - orders - Publishing order update for user 4
2025-07-07 23:59:48,796 - INFO - orders - Publishing user data update for user 4
2025-07-07 23:59:48,800 - INFO - orders - Publishing market data trigger
2025-07-07 23:59:48,801 - INFO - orders - [PERF] TOTAL place_order: 0.4325s
2025-07-07 23:59:48,802 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:48,819 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-07 23:59:48,822 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-07 23:59:48,824 - INFO - orders - [BARCLAYS] barclays_push called in place_order
2025-07-07 23:59:48,828 - DEBUG - orders - [BARCLAYS] Calling send_order_to_firebase with data: {'order_id': '4409176803', 'user_id': 4, 'order_company_name': 'EURAUD', 'order_type': 'BUY', 'order_quantity': 0.01, 'price': 1.798099792, 'status': 'OPEN', 'contract_value': 1000.0}
2025-07-07 23:59:49,328 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:51,595 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:53,874 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:56,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-07 23:59:58,419 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:00,712 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:02,982 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:05,254 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:07,589 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:08,376 - INFO - orders - Order placement request received - User: 1, Symbol: EURAUD, Type: BUY
2025-07-08 00:00:08,739 - INFO - orders - [MARGIN_CALC] Market data for EURAUD: {'b': '1.7980300000', 'o': '1.7979600000'}
2025-07-08 00:00:08,740 - WARNING - orders - [MARGIN_CALC] Missing ask price for EURAUD, using bid price with spread: bid=1.7980300000, ask=1.79820980300000
2025-07-08 00:00:08,740 - INFO - orders - [MARGIN_CALC] Using prices for EURAUD: bid=1.7980300000, ask=1.79820980300000
2025-07-08 00:00:08,741 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 17.98 AUD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 00:00:08,742 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:08,742 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:08,743 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:08,743 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:08,744 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:08,744 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:08,744 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for margin_calculation
2025-07-08 00:00:08,744 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: 17.98 AUD
2025-07-08 00:00:08,744 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: EURAUD, Type: BUY, Qty: 0.01, Price: 1.79820980300000, Margin: 17.98, Commission: 0.10
2025-07-08 00:00:08,768 - INFO - orders - [PERF] Order processing: 0.3386s
2025-07-08 00:00:08,768 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '9753304483', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'EURAUD', 'order_type': 'BUY', 'order_price': Decimal('1.79820980300000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('17.98'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 00:00:08,769 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 9753304483
2025-07-08 00:00:08,784 - INFO - orders - [PERF] Order creation: 0.0162s
2025-07-08 00:00:08,785 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 00:00:08,785 - INFO - orders - Publishing order update for user 1
2025-07-08 00:00:08,788 - INFO - orders - Publishing user data update for user 1
2025-07-08 00:00:08,790 - INFO - orders - Publishing market data trigger
2025-07-08 00:00:08,791 - INFO - orders - [PERF] TOTAL place_order: 0.4159s
2025-07-08 00:00:08,791 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:08,803 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 00:00:08,806 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 00:00:09,828 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:11,817 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79781
2025-07-08 00:00:11,817 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958FCE0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:11,817 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:11,817 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79781. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:11,828 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:11,843 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:11,843 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:11,844 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.399800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:11,844 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:11,844 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:11,845 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:11,845 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:11,845 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:11,846 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:11,846 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:11,846 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.399800000000000000000000 AUD
2025-07-08 00:00:11,846 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:11,846 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:11,848 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:12,088 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:14,439 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:16,671 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:18,953 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:19,417 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79744
2025-07-08 00:00:19,418 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958DE00>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:19,418 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:19,418 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79744. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:19,432 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:19,454 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:19,455 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:19,455 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.769800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:19,455 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:19,457 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:19,457 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:19,457 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:19,458 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:19,459 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:19,459 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:19,459 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.769800000000000000000000 AUD
2025-07-08 00:00:19,459 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:19,459 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:19,463 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:20,778 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79799
2025-07-08 00:00:20,778 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C79860180>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:20,779 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:20,779 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79799. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:20,793 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:20,810 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:20,810 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:20,810 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.219800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:20,811 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:20,812 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:20,812 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:20,812 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:20,813 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:20,813 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:20,813 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:20,813 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.219800000000000000000000 AUD
2025-07-08 00:00:20,813 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:20,813 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:20,814 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:21,311 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:23,264 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79799
2025-07-08 00:00:23,264 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958FE10>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:23,265 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:23,265 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79799. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:23,274 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:23,294 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:23,294 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:23,294 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.219800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:23,294 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:23,295 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:23,295 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:23,295 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:23,296 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:23,296 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:23,297 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:23,297 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.219800000000000000000000 AUD
2025-07-08 00:00:23,297 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:23,298 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:23,300 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:23,497 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:25,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:27,147 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79751
2025-07-08 00:00:27,147 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958DCD0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:27,147 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:27,147 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79751. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:27,159 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:27,178 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:27,178 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:27,178 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.699800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:27,178 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:27,180 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:27,180 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:27,180 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:27,181 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:27,181 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:27,181 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:27,181 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.699800000000000000000000 AUD
2025-07-08 00:00:27,182 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:27,182 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:27,184 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:28,005 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79751
2025-07-08 00:00:28,006 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958CE90>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:28,006 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:28,006 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79751. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:28,019 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:28,033 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:28,033 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:28,034 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.699800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:28,034 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:28,034 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:28,034 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:28,034 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:28,035 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:28,035 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:28,035 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:28,035 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.699800000000000000000000 AUD
2025-07-08 00:00:28,035 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:28,035 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:28,037 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:28,088 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:30,329 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:32,601 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79756
2025-07-08 00:00:32,602 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017C7958CE90>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:00:32,602 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:00:32,603 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79756. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:00:32,616 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:00:32,632 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:00:32,632 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:00:32,632 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.649800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:00:32,632 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:00:32,632 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:00:32,632 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:00:32,637 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:00:32,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:00:32,637 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:00:32,637 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:00:32,637 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.649800000000000000000000 AUD
2025-07-08 00:00:32,643 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:00:32,644 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:32,664 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:00:32,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:35,025 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:37,568 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:39,849 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:42,172 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:44,375 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:46,669 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:48,919 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:00:53,263 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:00:53,264 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:06:48,197 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:06:48,197 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:06:54,812 - INFO - orders - Starting the pending order checker background task.
2025-07-08 00:06:54,813 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 00:06:56,843 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:06:59,110 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:01,402 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:03,695 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:05,964 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:08,256 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:10,550 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:12,820 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:15,113 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:17,388 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:19,675 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:21,966 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:24,275 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:26,580 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:07:28,832 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:15,826 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:20:15,826 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:20:23,302 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:20:23,302 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:20:30,243 - INFO - orders - Starting the pending order checker background task.
2025-07-08 00:20:30,243 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 00:20:32,149 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:34,437 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:36,718 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:39,099 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:41,323 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:43,605 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:45,896 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:48,184 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:50,579 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:52,810 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:55,130 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:57,425 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:20:59,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:01,992 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:04,344 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:06,571 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:08,902 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:11,246 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:13,511 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:15,748 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:18,021 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:20,357 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:22,557 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:24,862 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:27,218 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:29,469 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:31,764 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:34,048 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:36,358 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:38,704 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:40,878 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:43,297 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:45,502 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:47,779 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:50,172 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:52,362 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:54,629 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:56,914 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:21:59,225 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:01,632 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:03,813 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:06,094 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:08,395 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:10,737 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:13,003 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:15,322 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:17,615 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:19,883 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:22,162 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:24,462 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:26,816 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:29,073 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:31,339 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:33,584 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:35,927 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:38,123 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:40,398 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:42,692 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:45,043 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:47,293 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:49,652 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:52,011 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:54,225 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:56,512 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:22:58,877 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:01,222 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:03,473 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:05,828 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:08,017 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:10,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:10,921 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79813
2025-07-08 00:23:10,921 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002C8447A6FD0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:23:10,922 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:23:10,922 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79813. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:23:10,952 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:23:10,981 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:23:10,981 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:23:10,981 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.079800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:23:10,981 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:23:10,982 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:23:10,982 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:23:10,982 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:23:10,983 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:23:10,983 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:23:10,983 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:23:10,984 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.079800000000000000000000 AUD
2025-07-08 00:23:10,984 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:23:10,984 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:23:10,992 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:23:12,606 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:14,892 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:17,175 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:19,445 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:21,716 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:24,076 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:26,304 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:28,662 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:30,917 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:33,181 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:35,524 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:37,776 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:40,131 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:42,356 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:44,738 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:46,911 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:49,254 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:51,603 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:53,859 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:56,054 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:23:58,343 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:00,712 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:03,281 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:05,529 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:07,882 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:10,148 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:12,371 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:14,710 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:17,001 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:19,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:21,604 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:24,089 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:26,314 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:28,669 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:30,919 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:33,185 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:35,530 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:37,745 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:40,039 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:42,303 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:44,641 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:47,322 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:49,665 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:51,914 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:54,477 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:56,826 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:24:59,093 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:01,437 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:03,618 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:05,951 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:08,199 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:10,522 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:12,805 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:15,158 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:17,362 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:19,782 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:21,966 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:24,401 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:26,556 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:28,885 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:31,139 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:33,489 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:35,743 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:38,104 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:40,367 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:42,608 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:44,953 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:47,212 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:49,459 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:51,733 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:54,080 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:56,424 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:25:58,687 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:00,938 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:03,294 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:05,646 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:07,900 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:10,255 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:12,498 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:14,753 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:17,027 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:19,369 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:21,624 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:24,496 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:26,963 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:29,306 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:31,651 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:34,019 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:36,259 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:38,632 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:40,881 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:43,132 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:45,444 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:47,841 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:50,039 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:52,334 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:54,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:26:56,950 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:13,397 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:29:13,397 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:29:20,098 - INFO - orders - Starting the pending order checker background task.
2025-07-08 00:29:20,099 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 00:29:20,258 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:22,619 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:24,866 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:27,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:29,502 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:31,780 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:34,052 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:36,340 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:38,641 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:40,919 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:43,202 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:45,497 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:47,801 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:50,089 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:52,424 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:54,660 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:57,009 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:29:59,284 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:01,637 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:03,877 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:06,129 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:08,505 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:10,747 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:13,532 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:15,317 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:17,581 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:18,634 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79762
2025-07-08 00:30:18,634 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFAA152FD0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:30:18,634 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:30:18,635 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79762. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:30:18,663 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:30:18,748 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:30:18,753 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:30:18,753 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.589800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:30:18,754 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:30:18,758 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:30:18,758 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:30:18,759 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:30:18,761 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:30:18,761 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:30:18,761 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:30:18,761 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.589800000000000000000000 AUD
2025-07-08 00:30:18,762 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:30:18,762 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:30:18,772 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:30:19,901 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:22,229 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:24,568 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:26,746 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:29,089 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:31,315 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:33,690 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:35,947 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:38,223 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:40,528 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:42,209 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79741
2025-07-08 00:30:42,209 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFAA152B10>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:30:42,209 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:30:42,209 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79741. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:30:42,224 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:30:42,281 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:30:42,282 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:30:42,282 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.799800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:30:42,282 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:30:42,286 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:30:42,286 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:30:42,286 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:30:42,288 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:30:42,288 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:30:42,289 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:30:42,289 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -0.799800000000000000000000 AUD
2025-07-08 00:30:42,289 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:30:42,289 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:30:42,291 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:30:42,802 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:45,236 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:47,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:49,638 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:51,992 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:55,043 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:57,343 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:30:59,562 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:01,869 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:04,177 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:06,535 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:08,807 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:11,045 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:31:13,318 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:34:51,312 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:34:51,312 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:34:58,172 - INFO - orders - Starting the pending order checker background task.
2025-07-08 00:34:58,174 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 00:34:58,232 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:00,513 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:02,768 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:05,066 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:07,377 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:09,631 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:11,931 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:14,288 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:16,528 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:18,855 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:20,889 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79651
2025-07-08 00:35:20,889 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001857546F230>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 00:35:20,890 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 00:35:20,890 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79651. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 00:35:20,907 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 00:35:20,954 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 00:35:20,954 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 00:35:20,954 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1.699800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 00:35:20,954 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 00:35:20,956 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 00:35:20,957 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 00:35:20,957 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 00:35:20,958 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 00:35:20,958 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 00:35:20,959 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 00:35:20,959 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -1.699800000000000000000000 AUD
2025-07-08 00:35:20,959 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 00:35:20,959 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:35:20,964 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 00:35:21,221 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:23,461 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:25,722 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:28,017 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:30,333 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:32,560 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:34,831 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:37,113 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:39,436 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:35:41,779 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:18,820 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 00:38:18,820 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 00:38:25,529 - INFO - orders - Starting the pending order checker background task.
2025-07-08 00:38:25,530 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 00:38:26,747 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:28,994 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:31,352 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:33,603 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:35,855 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:38,212 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:40,463 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:42,716 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:45,078 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:47,263 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:49,575 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:51,932 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:54,186 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:56,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:38:58,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:39:01,010 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:39:03,312 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:39:05,586 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:39:07,877 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 00:39:10,307 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:36,534 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:31:36,534 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:31:45,621 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:31:45,623 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:31:49,102 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:53,290 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:53,350 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:53,935 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:56,267 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:31:58,481 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:00,811 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:03,073 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:05,420 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:07,681 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:09,928 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:12,280 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:14,453 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:16,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:19,155 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:21,412 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:23,641 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:25,476 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79675
2025-07-08 01:32:25,477 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001D024299810>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:32:25,477 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:32:25,477 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79675. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:32:25,524 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:32:25,624 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 01:32:25,624 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 01:32:25,624 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1.459800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 01:32:25,624 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 01:32:25,629 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:32:25,629 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 01:32:25,632 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 01:32:25,634 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 01:32:25,634 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 01:32:25,634 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 01:32:25,634 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -1.459800000000000000000000 AUD
2025-07-08 01:32:25,634 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 01:32:25,634 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 01:32:25,640 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 01:32:26,007 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:28,242 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:30,514 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:32,744 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:32:35,019 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:22,040 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:34:22,040 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:34:31,159 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:34:31,159 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:34:35,278 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:39,479 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:39,559 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:39,657 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:41,187 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:34:43,300 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:30,311 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:44:30,312 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:44:37,524 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:44:37,525 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:44:39,463 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:41,717 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:43,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:46,241 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:48,582 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:50,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:53,056 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:55,346 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:57,706 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:44:59,945 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:45:01,197 - INFO - orders - Order close request received - Order ID: 9753304483, User ID: 1, Close Price: 1.79625
2025-07-08 01:45:01,197 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FE27FEED70>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:45:01,197 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:45:01,197 - INFO - orders - Request to close order 9753304483 for user 1 (user_type: demo) with price 1.79625. Frontend provided type: BUY, company: EURAUD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:45:01,210 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:45:01,257 - INFO - orders - Existing entry commission for order 9753304483: 0.10000000
2025-07-08 01:45:01,257 - INFO - orders - Commission calculation for order 9753304483: entry=0.10000000, exit=0.0, total=0.10
2025-07-08 01:45:01,257 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1.959800000000000000000000 AUD to USD for PnL on Close (user_id: 1, position: 9753304483)
2025-07-08 01:45:01,257 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: AUDUSD
2025-07-08 01:45:01,260 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:45:01,260 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for AUDUSD, trying inverse
2025-07-08 01:45:01,260 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDAUD
2025-07-08 01:45:01,263 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 01:45:01,263 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDAUD
2025-07-08 01:45:01,263 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for AUD to USD for PnL on Close
2025-07-08 01:45:01,263 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: -1.959800000000000000000000 AUD
2025-07-08 01:45:01,264 - ERROR - orders - Order 9753304483: PnL conversion failed. Rates missing for AUD/USD.
2025-07-08 01:45:01,264 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 01:45:01,270 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from AUD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from AUD to USD.
2025-07-08 01:45:02,187 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:45:04,480 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:45:06,735 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:45:09,079 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:45:11,324 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:47:49,698 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:47:49,698 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:47:56,385 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:47:56,386 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:47:57,303 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:47:59,508 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:00,940 - INFO - orders - Order close request received - Order ID: 8465745941, User ID: 1, Close Price: 0.89275
2025-07-08 01:48:00,941 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017FE476EEA0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:48:00,941 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:48:00,941 - INFO - orders - Request to close order 8465745941 for user 1 (user_type: demo) with price 0.89275. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:48:00,958 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:48:00,993 - INFO - orders - Existing entry commission for order 8465745941: 0.10000000
2025-07-08 01:48:00,994 - INFO - orders - Commission calculation for order 8465745941: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 01:48:00,994 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.040000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 8465745941)
2025-07-08 01:48:00,994 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:48:00,996 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:48:00,997 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:48:00,997 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:48:00,999 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: None
2025-07-08 01:48:00,999 - INFO - orders - [CURRENCY_CONVERT] No inverse conversion rate found for USDCAD
2025-07-08 01:48:01,000 - ERROR - orders - [CURRENCY_CONVERT] No conversion rate found for CAD to USD for PnL on Close
2025-07-08 01:48:01,000 - ERROR - orders - [CURRENCY_CONVERT] Returning original amount without conversion: 0.040000000000000000000000 CAD
2025-07-08 01:48:01,000 - ERROR - orders - Order 8465745941: PnL conversion failed. Rates missing for CAD/USD.
2025-07-08 01:48:01,000 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-08 01:48:01,008 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1484, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-08 01:48:01,836 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:04,075 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:06,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:08,670 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:10,918 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:13,172 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:15,531 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:17,779 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:20,031 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:27,190 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:48:27,191 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:48:36,205 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:48:36,206 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:48:40,283 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:46,453 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:46,480 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:46,508 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:46,909 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:47,692 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:49,596 - INFO - orders - Order close request received - Order ID: 8465745941, User ID: 1, Close Price: 0.89273
2025-07-08 01:48:49,596 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000025312615A70>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:48:49,596 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:48:49,597 - INFO - orders - Request to close order 8465745941 for user 1 (user_type: demo) with price 0.89273. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:48:49,603 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:48:49,614 - INFO - orders - Existing entry commission for order 8465745941: 0.10000000
2025-07-08 01:48:49,614 - INFO - orders - Commission calculation for order 8465745941: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 01:48:49,614 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.020000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 8465745941)
2025-07-08 01:48:49,614 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 01:48:49,615 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 0.020000000000000000000000 CAD / 1.3645100000 = 0.01465727623835662618815545507 USD
2025-07-08 01:48:49,633 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24953.67000000, margin=0
2025-07-08 01:48:49,634 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24953.67000000, margin=0
2025-07-08 01:48:49,634 - INFO - orders - User data cache updated for user 1
2025-07-08 01:48:49,634 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 01:48:49,634 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 01:48:49,635 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 01:48:49,637 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 01:48:49,637 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-07-08 01:48:49,637 - INFO - orders - Publishing order update for user 1
2025-07-08 01:48:49,638 - INFO - orders - Publishing user data update for user 1
2025-07-08 01:48:49,639 - INFO - orders - Publishing market data trigger
2025-07-08 01:48:49,641 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:50,238 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:52,195 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:54,463 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:56,706 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:48:59,000 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:01,261 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:03,558 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:05,818 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:08,171 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:10,417 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:12,624 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:14,934 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:17,171 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:19,547 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:21,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:24,006 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:26,305 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:28,566 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:49:30,814 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:02,986 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:50:02,986 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:50:11,950 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:50:11,951 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:50:18,151 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:18,269 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:18,726 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:20,974 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:23,226 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:25,478 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:26,204 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 01:50:26,516 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8926900000', 'o': '0.8926400000'}
2025-07-08 01:50:26,518 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8926900000, ask=0.89277926900000
2025-07-08 01:50:26,518 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8926900000, ask=0.89277926900000
2025-07-08 01:50:26,520 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 01:50:26,520 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:50:26,523 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:50:26,523 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:50:26,523 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:50:26,525 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 01:50:26,525 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 01:50:26,525 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 01:50:26,525 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89277926900000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 01:50:26,552 - INFO - orders - [PERF] Order processing: 0.3418s
2025-07-08 01:50:26,552 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '4134896836', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89277926900000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 01:50:26,553 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 4134896836
2025-07-08 01:50:26,578 - INFO - orders - [PERF] Order creation: 0.0263s
2025-07-08 01:50:26,578 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 01:50:26,579 - INFO - orders - Publishing order update for user 1
2025-07-08 01:50:26,580 - INFO - orders - Publishing user data update for user 1
2025-07-08 01:50:26,582 - INFO - orders - Publishing market data trigger
2025-07-08 01:50:26,585 - INFO - orders - [PERF] TOTAL place_order: 0.3844s
2025-07-08 01:50:26,586 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:26,598 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 01:50:26,603 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 01:50:27,717 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:28,900 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: SELL
2025-07-08 01:50:29,286 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8926900000', 'o': '0.8926400000'}
2025-07-08 01:50:29,287 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8926900000, ask=0.89277926900000
2025-07-08 01:50:29,288 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8926900000, ask=0.89277926900000
2025-07-08 01:50:29,289 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 01:50:29,290 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:50:29,291 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:50:29,292 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:50:29,292 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:50:29,293 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 01:50:29,294 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 01:50:29,294 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 01:50:29,294 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: SELL, Qty: 0.01, Price: 0.8926900000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 01:50:29,345 - INFO - orders - [PERF] Order processing: 0.4412s
2025-07-08 01:50:29,346 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '2731819054', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8926900000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 01:50:29,347 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 2731819054
2025-07-08 01:50:29,373 - INFO - orders - [PERF] Order creation: 0.0273s
2025-07-08 01:50:29,373 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 01:50:29,373 - INFO - orders - Publishing order update for user 1
2025-07-08 01:50:29,379 - INFO - orders - Publishing user data update for user 1
2025-07-08 01:50:29,385 - INFO - orders - Publishing market data trigger
2025-07-08 01:50:29,388 - INFO - orders - [PERF] TOTAL place_order: 0.4888s
2025-07-08 01:50:29,392 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:29,421 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 01:50:29,428 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 01:50:30,181 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:32,342 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:34,561 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:36,819 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:39,084 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:40,975 - INFO - orders - Cancel pending order request received - Order ID: 7625036208, User ID: 1
2025-07-08 01:50:41,045 - INFO - orders - Generated cancel_id: 9094377704 for order 7625036208
2025-07-08 01:50:41,063 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 01:50:41,063 - INFO - orders - Non-Barclays user. Cancelling order 7625036208 immediately
2025-07-08 01:50:41,112 - ERROR - orders - Error cancelling pending order: name 'update_user_static_orders_cache_after_order_change' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1897, in cancel_pending_order
    await update_user_static_orders_cache_after_order_change(user_id_for_operation, db, redis_client, cancel_request.user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 01:50:41,364 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:43,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:45,963 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:48,218 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:50,469 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:52,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:55,090 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:57,323 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:50:59,517 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:01,817 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:04,075 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:06,322 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:08,678 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:10,933 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:13,187 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:15,408 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:51:17,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:37,703 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:56:37,703 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:56:42,355 - INFO - orders - Cancel pending order request received - Order ID: 7625036208, User ID: 1
2025-07-08 01:56:42,371 - WARNING - orders - Cannot cancel order 7625036208 with status CANCELLED. Only PENDING orders can be cancelled.
2025-07-08 01:56:42,371 - ERROR - orders - Error cancelling pending order: 400: Only PENDING orders can be cancelled
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1805, in cancel_pending_order
    raise HTTPException(status_code=400, detail="Only PENDING orders can be cancelled")
fastapi.exceptions.HTTPException: 400: Only PENDING orders can be cancelled
2025-07-08 01:56:46,926 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:56:46,927 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:56:51,080 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:51,882 - INFO - orders - Order close request received - Order ID: 2731819054, User ID: 1, Close Price: 0.89283
2025-07-08 01:56:51,883 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000223426BBE10>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:56:51,884 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:56:51,884 - INFO - orders - Request to close order 2731819054 for user 1 (user_type: demo) with price 0.89283. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:56:51,906 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:56:55,190 - INFO - orders - Existing entry commission for order 2731819054: 0.10000000
2025-07-08 01:56:55,190 - INFO - orders - Commission calculation for order 2731819054: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 01:56:55,191 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.140000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 2731819054)
2025-07-08 01:56:55,191 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:56:55,207 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:56:55,207 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:56:55,208 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:56:55,213 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 01:56:55,214 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 01:56:55,214 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.140000000000000000000000 CAD / 1.3645100000 = -0.1026009336684963833170881855 USD
2025-07-08 01:56:55,288 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24953.37000000, margin=6.54
2025-07-08 01:56:55,289 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24953.37000000, margin=6.54
2025-07-08 01:56:55,295 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:57,334 - INFO - orders - User data cache updated for user 1
2025-07-08 01:56:57,335 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 01:56:57,335 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 01:56:57,342 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 01:56:57,351 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 01:56:57,354 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 01:56:57,355 - INFO - orders - Publishing order update for user 1
2025-07-08 01:56:57,359 - INFO - orders - Publishing user data update for user 1
2025-07-08 01:56:57,362 - INFO - orders - Publishing market data trigger
2025-07-08 01:56:57,430 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:57,557 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:57,985 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:56:58,035 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:00,279 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:01,358 - INFO - orders - Order close request received - Order ID: 4134896836, User ID: 1, Close Price: 0.89278
2025-07-08 01:57:01,358 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000223426BAEA0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 01:57:01,359 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 01:57:01,359 - INFO - orders - Request to close order 4134896836 for user 1 (user_type: demo) with price 0.89278. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 01:57:01,367 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 01:57:01,416 - INFO - orders - Existing entry commission for order 4134896836: 0.10000000
2025-07-08 01:57:01,417 - INFO - orders - Commission calculation for order 4134896836: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 01:57:01,417 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.000730000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 4134896836)
2025-07-08 01:57:01,417 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 01:57:01,418 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 01:57:01,418 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 01:57:01,418 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 01:57:01,419 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 01:57:01,419 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 01:57:01,419 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 0.000730000000000000000000 CAD / 1.3645100000 = 0.0005349905827000168558676741101 USD
2025-07-08 01:57:01,438 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24953.17000000, margin=0
2025-07-08 01:57:01,439 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24953.17000000, margin=0
2025-07-08 01:57:01,440 - INFO - orders - User data cache updated for user 1
2025-07-08 01:57:01,440 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 01:57:01,440 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 01:57:01,443 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 01:57:01,446 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 01:57:01,447 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-07-08 01:57:01,447 - INFO - orders - Publishing order update for user 1
2025-07-08 01:57:01,450 - INFO - orders - Publishing user data update for user 1
2025-07-08 01:57:01,452 - INFO - orders - Publishing market data trigger
2025-07-08 01:57:01,453 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:02,472 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:04,683 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:06,944 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:09,260 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:11,516 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:12,661 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-07-08 01:57:12,667 - INFO - orders - Validating pending order price: Order type=SELL_LIMIT, Order price=1, Current buy price=0.8926800000, Current sell price=0.8926400000
2025-07-08 01:57:12,672 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 01:57:12,673 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'demo', 'account_number': '5O42G', 'wallet_balance': Decimal('24953.17000000'), 'margin': Decimal('0'), 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-07-08 01:57:12,673 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 01:57:12,673 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 01:57:12,673 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 01:57:12,674 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 01:57:12,674 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 01:57:12,677 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 01:57:12,678 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 01:57:12,681 - INFO - orders - Calculated initial margin: None, commission: None for pending order 9071838706
2025-07-08 01:57:12,689 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9071838706', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('1'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9953019502', 'takeprofit_id': '7678372237', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 01:57:12,689 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 1 at price 1
2025-07-08 01:57:12,690 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '9071838706', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_price': Decimal('1'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9953019502', 'takeprofit_id': '7678372237', 'close_id': None}
2025-07-08 01:57:12,690 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '9071838706', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_price': Decimal('1'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9953019502', 'takeprofit_id': '7678372237', 'close_id': None}
2025-07-08 01:57:12,691 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 9071838706
2025-07-08 01:57:12,715 - INFO - orders - Order 9071838706 verified in database on attempt 1 before adding to Redis.
2025-07-08 01:57:12,719 - INFO - orders - Pending order 9071838706 added to Redis for non-Barclays user or demo user.
2025-07-08 01:57:12,722 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 909, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 01:57:12,725 - INFO - orders - [PERF] TOTAL place_order: 0.0638s
2025-07-08 01:57:12,731 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 01:57:12,733 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 01:57:13,855 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:16,104 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:18,356 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:20,725 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:22,978 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:25,230 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:27,585 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:29,739 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:32,083 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:34,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:36,696 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:40,933 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:41,196 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:43,422 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:45,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:48,049 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:57:50,273 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:59:41,332 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 01:59:41,332 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 01:59:46,527 - INFO - orders - Cancel pending order request received - Order ID: 9071838706, User ID: 1
2025-07-08 01:59:46,543 - INFO - orders - Generated cancel_id: 5270377990 for order 9071838706
2025-07-08 01:59:50,105 - INFO - orders - Starting the pending order checker background task.
2025-07-08 01:59:50,107 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 01:59:51,226 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 01:59:51,226 - INFO - orders - Non-Barclays user. Cancelling order 9071838706 immediately
2025-07-08 01:59:53,253 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:59:55,328 - ERROR - orders - Error cancelling pending order: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1897, in cancel_pending_order
    await update_static_orders_cache(user_id_for_operation, db, redis_client, cancel_request.user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 01:59:55,547 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:59:55,696 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:59:55,958 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 01:59:58,180 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:00,432 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:02,790 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:05,006 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:07,295 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:09,546 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:11,799 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:14,106 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:16,405 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:18,662 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:19,091 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 02:00:19,096 - INFO - orders - Validating pending order price: Order type=BUY_LIMIT, Order price=0.3, Current buy price=0.8925800000, Current sell price=0.8925600000
2025-07-08 02:00:19,104 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 02:00:19,105 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('24953.17000000'), 'margin': Decimal('0E-8'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-07-08 02:00:19,105 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 02:00:19,107 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 02:00:19,107 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 02:00:19,107 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 02:00:19,107 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 02:00:19,109 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 02:00:19,111 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 02:00:19,112 - INFO - orders - Calculated initial margin: None, commission: None for pending order 1954764031
2025-07-08 02:00:19,119 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '1954764031', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.3'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5906799374', 'takeprofit_id': '7487216685', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 02:00:19,119 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.3
2025-07-08 02:00:19,119 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '1954764031', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.3'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5906799374', 'takeprofit_id': '7487216685', 'close_id': None}
2025-07-08 02:00:19,119 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '1954764031', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.3'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5906799374', 'takeprofit_id': '7487216685', 'close_id': None}
2025-07-08 02:00:19,119 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 1954764031
2025-07-08 02:00:19,141 - INFO - orders - Order 1954764031 verified in database on attempt 1 before adding to Redis.
2025-07-08 02:00:19,144 - INFO - orders - Pending order 1954764031 added to Redis for non-Barclays user or demo user.
2025-07-08 02:00:19,146 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 909, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 02:00:19,147 - INFO - orders - [PERF] TOTAL place_order: 0.0563s
2025-07-08 02:00:19,152 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 02:00:19,153 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:00:20,925 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:23,267 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:26,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:27,777 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:30,026 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:32,402 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:34,634 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:35,422 - WARNING - orders - Pending order 1954764031 already exists in Redis. Skipping add.
2025-07-08 02:00:35,425 - INFO - orders - User data cache updated for user 1 after modifying pending order
2025-07-08 02:00:37,064 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:39,434 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:41,702 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:44,213 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:46,206 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:48,562 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:50,815 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:53,016 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:55,323 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:57,586 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:00:59,923 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:02,181 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:04,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:06,685 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:09,018 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:09,982 - INFO - orders - Cancel pending order request received - Order ID: 1954764031, User ID: 1
2025-07-08 02:01:09,992 - INFO - orders - Generated cancel_id: 5615387711 for order 1954764031
2025-07-08 02:01:09,996 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:01:09,997 - INFO - orders - Non-Barclays user. Cancelling order 1954764031 immediately
2025-07-08 02:01:10,056 - ERROR - orders - Error cancelling pending order: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1897, in cancel_pending_order
    await update_static_orders_cache(user_id_for_operation, db, redis_client, cancel_request.user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:01:11,307 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:13,582 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:15,911 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:18,175 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:20,423 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:22,971 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:25,231 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:27,501 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:29,829 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:32,077 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:34,335 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:36,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:38,874 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:41,196 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:43,452 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:45,765 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:48,054 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:50,282 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:51,180 - INFO - orders - Order placement request received - User: 1, Symbol: CADJPY, Type: BUY
2025-07-08 02:01:51,526 - INFO - orders - [MARGIN_CALC] Market data for CADJPY: {'b': '107.1520000000', 'o': '107.1440000000'}
2025-07-08 02:01:51,528 - WARNING - orders - [MARGIN_CALC] Missing ask price for CADJPY, using bid price with spread: bid=107.1520000000, ask=107.16271520000000
2025-07-08 02:01:51,529 - INFO - orders - [MARGIN_CALC] Using prices for CADJPY: bid=107.1520000000, ask=107.16271520000000
2025-07-08 02:01:51,531 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1071.63 JPY to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:01:51,531 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:01:51,534 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:01:51,534 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:01:51,534 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:01:51,537 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:01:51,538 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:01:51,538 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1071.63 JPY / 146.2010000000 = 7.329840425168090505536897832 USD
2025-07-08 02:01:51,538 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: CADJPY, Type: BUY, Qty: 0.01, Price: 107.16271520000000, Margin: 7.329840425168090505536897832, Commission: 0.00
2025-07-08 02:01:51,569 - INFO - orders - [PERF] Order processing: 0.3849s
2025-07-08 02:01:51,569 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '3570778874', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'CADJPY', 'order_type': 'BUY', 'order_price': Decimal('107.16271520000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('7.329840425168090505536897832'), 'commission': Decimal('0.00'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:01:51,570 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 3570778874
2025-07-08 02:01:51,585 - INFO - orders - [PERF] Order creation: 0.0162s
2025-07-08 02:01:51,586 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:01:51,586 - INFO - orders - Publishing order update for user 1
2025-07-08 02:01:51,588 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:01:51,591 - INFO - orders - Publishing market data trigger
2025-07-08 02:01:51,592 - INFO - orders - [PERF] TOTAL place_order: 0.4121s
2025-07-08 02:01:51,594 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:51,606 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 02:01:51,611 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:01:52,679 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:54,934 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:57,185 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:58,809 - INFO - orders - Add stoploss request received - Order ID: 3570778874, User ID: 1
2025-07-08 02:01:58,818 - INFO - orders - Generated stoploss_id: 9162808751 for order 3570778874
2025-07-08 02:01:58,819 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:01:58,819 - INFO - orders - Non-Barclays user. Adding stoploss to order 3570778874 immediately
2025-07-08 02:01:58,835 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:01:58,836 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:01:58,840 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:01:58,847 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:01:58,848 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:01:59,436 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:01:59,548 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 3570778874 at 107.1265000000 <= 107.15000000 (diff: 0.0235000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:01:59,575 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -36.21520000000000000000000000 JPY to USD for PnL on Close (user_id: 1, position: 3570778874)
2025-07-08 02:01:59,576 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:01:59,578 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:01:59,578 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:01:59,578 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:01:59,580 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:01:59,581 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:01:59,581 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -36.21520000000000000000000000 JPY / 146.2010000000 = -0.2477082920089465872326454675 USD
2025-07-08 02:01:59,691 - INFO - orders - [ORDER_CLOSE] Successfully closed order 3570778874 for user 1
2025-07-08 02:01:59,695 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:01:59,695 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:01:59,700 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 02:01:59,706 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:01:59,711 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-07-08 02:01:59,766 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:01,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:03,298 - INFO - orders - Order placement request received - User: 1, Symbol: CADJPY, Type: BUY
2025-07-08 02:02:03,636 - INFO - orders - [MARGIN_CALC] Market data for CADJPY: {'b': '107.1470000000', 'o': '107.1400000000'}
2025-07-08 02:02:03,636 - WARNING - orders - [MARGIN_CALC] Missing ask price for CADJPY, using bid price with spread: bid=107.1470000000, ask=107.15771470000000
2025-07-08 02:02:03,636 - INFO - orders - [MARGIN_CALC] Using prices for CADJPY: bid=107.1470000000, ask=107.15771470000000
2025-07-08 02:02:03,637 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1071.58 JPY to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:02:03,637 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:02:03,638 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:02:03,638 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:02:03,638 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:02:03,640 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:02:03,641 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:02:03,641 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1071.58 JPY / 146.2010000000 = 7.329498430243295189499387829 USD
2025-07-08 02:02:03,641 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: CADJPY, Type: BUY, Qty: 0.01, Price: 107.15771470000000, Margin: 7.329498430243295189499387829, Commission: 0.00
2025-07-08 02:02:03,656 - INFO - orders - [PERF] Order processing: 0.3548s
2025-07-08 02:02:03,657 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '3456322115', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'CADJPY', 'order_type': 'BUY', 'order_price': Decimal('107.15771470000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('7.329498430243295189499387829'), 'commission': Decimal('0.00'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:02:03,657 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 3456322115
2025-07-08 02:02:03,672 - INFO - orders - [PERF] Order creation: 0.0158s
2025-07-08 02:02:03,673 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:02:03,673 - INFO - orders - Publishing order update for user 1
2025-07-08 02:02:03,677 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:02:03,679 - INFO - orders - Publishing market data trigger
2025-07-08 02:02:03,684 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:03,685 - INFO - orders - [PERF] TOTAL place_order: 0.3868s
2025-07-08 02:02:03,697 - ERROR - orders - Error updating user cache: name 'update_user_static_orders_cache_after_order_change' is not defined
2025-07-08 02:02:03,700 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:02:04,047 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:06,401 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:08,662 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:10,548 - INFO - orders - Add takeprofit request received - Order ID: 3456322115, User ID: 1
2025-07-08 02:02:10,562 - INFO - orders - Generated takeprofit_id: 1862142189 for order 3456322115
2025-07-08 02:02:10,565 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:02:10,565 - INFO - orders - Non-Barclays user. Adding takeprofit to order 3456322115 immediately
2025-07-08 02:02:10,586 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:02:10,587 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:02:10,591 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:02:10,596 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:02:10,599 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:02:10,851 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:13,261 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:15,516 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:17,766 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:18,699 - INFO - orders - Add stoploss request received - Order ID: 3456322115, User ID: 1
2025-07-08 02:02:18,710 - INFO - orders - Generated stoploss_id: 2519191596 for order 3456322115
2025-07-08 02:02:18,712 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:02:18,712 - INFO - orders - Non-Barclays user. Adding stoploss to order 3456322115 immediately
2025-07-08 02:02:18,729 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:02:18,729 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:02:18,733 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:02:18,737 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:02:18,738 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:02:20,018 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:20,070 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 3456322115 at 107.1315000000 <= 107.15500000 (diff: 0.0235000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:02:20,136 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -26.21470000000000000000000000 JPY to USD for PnL on Close (user_id: 1, position: 3456322115)
2025-07-08 02:02:20,136 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:02:20,138 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:02:20,138 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:02:20,138 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:02:20,140 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:02:20,140 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:02:20,140 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -26.21470000000000000000000000 JPY / 146.2010000000 = -0.1793058871006354265702696972 USD
2025-07-08 02:02:20,194 - INFO - orders - [ORDER_CLOSE] Successfully closed order 3456322115 for user 1
2025-07-08 02:02:20,198 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:02:20,198 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:02:20,202 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 02:02:20,206 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:02:20,209 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-07-08 02:02:20,251 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:22,381 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:24,621 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:26,879 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:29,127 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:31,485 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:33,742 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:36,000 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:40,188 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:40,602 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:42,956 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:45,207 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:47,414 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:49,713 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:52,007 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:54,315 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:56,622 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:02:58,853 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:01,169 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:03,420 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:05,775 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:08,026 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:10,283 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:12,635 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:14,888 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:17,153 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:19,496 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:21,749 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:24,002 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:26,269 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:28,610 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:30,862 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:33,121 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:35,472 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:37,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:39,981 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:42,333 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:44,585 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:46,836 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:49,193 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:51,443 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:03:53,761 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:05:31,328 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:05:31,328 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:05:40,199 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:05:40,201 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:05:43,368 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:05:47,559 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:05:47,694 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:05:47,789 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:05:51,623 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:05:51,623 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:06:00,401 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:06:00,404 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:06:03,541 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:07,719 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:07,823 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:07,917 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:08,809 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:11,119 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:13,475 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:15,710 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:17,978 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:20,239 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:22,330 - INFO - orders - Order placement request received - User: 1, Symbol: CADJPY, Type: BUY
2025-07-08 02:06:22,688 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:22,696 - INFO - orders - [MARGIN_CALC] Market data for CADJPY: {'b': '107.1510000000', 'o': '107.1450000000'}
2025-07-08 02:06:22,696 - WARNING - orders - [MARGIN_CALC] Missing ask price for CADJPY, using bid price with spread: bid=107.1510000000, ask=107.16171510000000
2025-07-08 02:06:22,697 - INFO - orders - [MARGIN_CALC] Using prices for CADJPY: bid=107.1510000000, ask=107.16171510000000
2025-07-08 02:06:22,699 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1071.62 JPY to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:06:22,699 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:06:22,701 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:06:22,701 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:06:22,702 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:06:22,704 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:06:22,704 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:06:22,704 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1071.62 JPY / 146.2010000000 = 7.329772026183131442329395832 USD
2025-07-08 02:06:22,704 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: CADJPY, Type: BUY, Qty: 0.01, Price: 107.16171510000000, Margin: 7.329772026183131442329395832, Commission: 0.00
2025-07-08 02:06:22,723 - INFO - orders - [PERF] Order processing: 0.3904s
2025-07-08 02:06:22,723 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '7308524567', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'CADJPY', 'order_type': 'BUY', 'order_price': Decimal('107.16171510000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('7.329772026183131442329395832'), 'commission': Decimal('0.00'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:06:22,724 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 7308524567
2025-07-08 02:06:22,745 - INFO - orders - [PERF] Order creation: 0.0222s
2025-07-08 02:06:22,746 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:06:22,746 - INFO - orders - Publishing order update for user 1
2025-07-08 02:06:22,767 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:06:22,768 - INFO - orders - Publishing market data trigger
2025-07-08 02:06:22,769 - INFO - orders - [PERF] TOTAL place_order: 0.4394s
2025-07-08 02:06:22,771 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:22,774 - ERROR - orders - Error updating user cache: name 'update_static_orders_cache' is not defined
2025-07-08 02:06:22,777 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:06:24,839 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:27,107 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:28,324 - INFO - orders - Add stoploss request received - Order ID: 7308524567, User ID: 1
2025-07-08 02:06:28,343 - INFO - orders - Generated stoploss_id: 5143330805 for order 7308524567
2025-07-08 02:06:28,350 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:06:28,350 - INFO - orders - Non-Barclays user. Adding stoploss to order 7308524567 immediately
2025-07-08 02:06:28,374 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:06:28,374 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:06:28,378 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:06:28,384 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:06:28,386 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:06:29,466 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:29,512 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7308524567 at 107.1295000000 <= 107.16100000 (diff: 0.0315000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:06:29,582 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -32.21510000000000000000000000 JPY to USD for PnL on Close (user_id: 1, position: 7308524567)
2025-07-08 02:06:29,582 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-07-08 02:06:29,583 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:06:29,583 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-07-08 02:06:29,583 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-07-08 02:06:29,585 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('146.2010000000'), 'o': Decimal('146.1970000000')}
2025-07-08 02:06:29,585 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 146.2010000000
2025-07-08 02:06:29,585 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -32.21510000000000000000000000 JPY / 146.2010000000 = -0.2203480140354717135997701794 USD
2025-07-08 02:06:29,665 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7308524567 for user 1
2025-07-08 02:06:29,668 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:06:29,668 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:06:29,673 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 02:06:29,679 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:06:29,680 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-07-08 02:06:29,729 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:31,697 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:33,974 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:36,216 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:38,472 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:39,525 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: CADJPY, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 02:06:39,531 - INFO - orders - Validating pending order price: Order type=BUY_LIMIT, Order price=100, Current buy price=107.1655000000, Current sell price=107.1355000000
2025-07-08 02:06:39,537 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 02:06:39,538 - INFO - orders - [DEBUG] User data from cache: {'wallet_balance': Decimal('24952.54000000'), 'leverage': Decimal('100.00'), 'group_name': 'Group B', 'margin': Decimal('7.33000000')}
2025-07-08 02:06:39,539 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 02:06:39,539 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 02:06:39,540 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 02:06:39,540 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 02:06:39,540 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 02:06:39,542 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for CADJPY: contract_size=100000.00000000, profit_currency=JPY, digit=3.00000
2025-07-08 02:06:39,543 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 02:06:39,545 - INFO - orders - Calculated initial margin: None, commission: None for pending order 7729850795
2025-07-08 02:06:39,552 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7729850795', 'order_company_name': 'CADJPY', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('100'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '8884775334', 'takeprofit_id': '2074178446', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 02:06:39,552 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 100
2025-07-08 02:06:39,553 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '7729850795', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'CADJPY', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('100'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '8884775334', 'takeprofit_id': '2074178446', 'close_id': None}
2025-07-08 02:06:39,553 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '7729850795', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'CADJPY', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('100'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '8884775334', 'takeprofit_id': '2074178446', 'close_id': None}
2025-07-08 02:06:39,553 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 7729850795
2025-07-08 02:06:39,602 - INFO - orders - Order 7729850795 verified in database on attempt 1 before adding to Redis.
2025-07-08 02:06:39,606 - INFO - orders - Pending order 7729850795 added to Redis for non-Barclays user or demo user.
2025-07-08 02:06:39,609 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 909, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 02:06:39,619 - INFO - orders - [PERF] TOTAL place_order: 0.0943s
2025-07-08 02:06:39,634 - ERROR - orders - Error updating user cache: name 'update_static_orders_cache' is not defined
2025-07-08 02:06:39,638 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:06:40,825 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:43,101 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:45,333 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:47,687 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:49,862 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:52,126 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:54,432 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:57,102 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:06:59,045 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:01,330 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:03,548 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:07,858 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:08,069 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:10,375 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:12,671 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:15,096 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:16,555 - WARNING - orders - Pending order 7729850795 already exists in Redis. Skipping add.
2025-07-08 02:07:16,559 - INFO - orders - User data cache updated for user 1 after modifying pending order
2025-07-08 02:07:17,281 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:19,493 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:21,782 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:24,053 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:25,102 - INFO - orders - Cancel pending order request received - Order ID: 7729850795, User ID: 1
2025-07-08 02:07:25,112 - INFO - orders - Generated cancel_id: 9456555914 for order 7729850795
2025-07-08 02:07:25,116 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:07:25,116 - INFO - orders - Non-Barclays user. Cancelling order 7729850795 immediately
2025-07-08 02:07:25,133 - ERROR - orders - Error cancelling pending order: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1897, in cancel_pending_order
    await update_static_orders_cache(user_id_for_operation, db, redis_client, cancel_request.user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:07:26,410 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:28,627 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:31,003 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:33,253 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:35,492 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:37,749 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:39,998 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:42,352 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:44,525 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:46,860 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:49,108 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:51,465 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:53,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:55,972 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:07:58,222 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:00,484 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:02,831 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:05,084 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:07,337 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:09,700 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:11,943 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:14,203 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:08:16,561 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:23,332 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:09:23,332 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:09:29,858 - INFO - orders - Cancel pending order request received - Order ID: 7729850795, User ID: 1
2025-07-08 02:09:29,865 - WARNING - orders - Cannot cancel order 7729850795 with status CANCELLED. Only PENDING orders can be cancelled.
2025-07-08 02:09:29,865 - ERROR - orders - Error cancelling pending order: 400: Only PENDING orders can be cancelled
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1806, in cancel_pending_order
    raise HTTPException(status_code=400, detail="Only PENDING orders can be cancelled")
fastapi.exceptions.HTTPException: 400: Only PENDING orders can be cancelled
2025-07-08 02:09:32,137 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:09:32,139 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:09:35,289 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:39,518 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:39,642 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:39,774 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:40,947 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:09:43,201 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:26,977 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:16:26,978 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:16:36,048 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:16:36,052 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:16:39,188 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:43,359 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:43,399 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:43,439 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:43,474 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:16:47,262 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:16:47,263 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:16:56,145 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:16:56,147 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:16:59,349 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:03,569 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:03,623 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:03,687 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:03,746 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:05,697 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:07,804 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:10,048 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:12,337 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:14,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:16,907 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:19,155 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:21,409 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:23,773 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:26,033 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:28,279 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:30,632 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:32,860 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:35,142 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:37,492 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:39,744 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:42,004 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:44,249 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:46,613 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:48,842 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:51,120 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:53,363 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:55,616 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:17:57,992 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:00,242 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:02,560 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:03,728 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 02:18:03,878 - INFO - orders - Validating pending order price: Order type=BUY_LIMIT, Order price=0.88, Current buy price=0.8929900000, Current sell price=0.8929700000
2025-07-08 02:18:03,951 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 02:18:03,962 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('24952.22000000'), 'margin': Decimal('0E-8'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-07-08 02:18:03,963 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 02:18:03,971 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 02:18:03,971 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 02:18:03,971 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 02:18:03,971 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 02:18:03,983 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 02:18:03,987 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 02:18:03,993 - INFO - orders - Calculated initial margin: None, commission: None for pending order 7973306796
2025-07-08 02:18:04,028 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7973306796', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5806003366', 'takeprofit_id': '8022110760', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 02:18:04,029 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-07-08 02:18:04,029 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '7973306796', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5806003366', 'takeprofit_id': '8022110760', 'close_id': None}
2025-07-08 02:18:04,030 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '7973306796', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5806003366', 'takeprofit_id': '8022110760', 'close_id': None}
2025-07-08 02:18:04,031 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 7973306796
2025-07-08 02:18:04,138 - INFO - orders - Order 7973306796 verified in database on attempt 1 before adding to Redis.
2025-07-08 02:18:04,156 - INFO - orders - Pending order 7973306796 added to Redis for non-Barclays user or demo user.
2025-07-08 02:18:04,164 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 910, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 02:18:04,185 - INFO - orders - [PERF] TOTAL place_order: 0.4568s
2025-07-08 02:18:04,427 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:18:04,938 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:07,082 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:09,362 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:11,715 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:13,921 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:16,185 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:18,216 - INFO - orders - Cancel pending order request received - Order ID: 7973306796, User ID: 1
2025-07-08 02:18:18,301 - INFO - orders - Generated cancel_id: 2046639163 for order 7973306796
2025-07-08 02:18:18,322 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:18:18,322 - INFO - orders - Non-Barclays user. Cancelling order 7973306796 immediately
2025-07-08 02:18:18,489 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:20,816 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:22,997 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 02:18:23,006 - INFO - orders - Validating pending order price: Order type=BUY_LIMIT, Order price=0.88, Current buy price=0.8931000000, Current sell price=0.8930700000
2025-07-08 02:18:23,012 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 02:18:23,014 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('24952.22000000'), 'margin': Decimal('0E-8'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-07-08 02:18:23,014 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 02:18:23,015 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 02:18:23,015 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 02:18:23,015 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 02:18:23,015 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 02:18:23,018 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 02:18:23,020 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 02:18:23,021 - INFO - orders - Calculated initial margin: None, commission: None for pending order 8723265527
2025-07-08 02:18:23,028 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8723265527', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5652982390', 'takeprofit_id': '1999960259', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 02:18:23,028 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-07-08 02:18:23,028 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '8723265527', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5652982390', 'takeprofit_id': '1999960259', 'close_id': None}
2025-07-08 02:18:23,029 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '8723265527', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '5652982390', 'takeprofit_id': '1999960259', 'close_id': None}
2025-07-08 02:18:23,029 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 8723265527
2025-07-08 02:18:23,051 - INFO - orders - Order 8723265527 verified in database on attempt 1 before adding to Redis.
2025-07-08 02:18:23,055 - INFO - orders - Pending order 8723265527 added to Redis for non-Barclays user or demo user.
2025-07-08 02:18:23,057 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 910, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 02:18:23,061 - INFO - orders - [PERF] TOTAL place_order: 0.0636s
2025-07-08 02:18:23,075 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:18:23,375 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:25,327 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:27,579 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:29,933 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:32,185 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:34,266 - WARNING - orders - Pending order 8723265527 already exists in Redis. Skipping add.
2025-07-08 02:18:34,277 - INFO - orders - User data cache updated for user 1 after modifying pending order
2025-07-08 02:18:34,443 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:36,703 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:18:38,995 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:16,991 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:33:16,992 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:33:34,079 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:33:34,081 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:33:39,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:41,295 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:41,327 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:41,357 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:41,551 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:43,825 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:46,180 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:48,433 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:50,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:52,957 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:55,186 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:57,464 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:33:59,812 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:02,077 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:04,280 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:06,578 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:07,278 - INFO - orders - Cancel pending order request received - Order ID: 8723265527, User ID: 1
2025-07-08 02:34:07,296 - INFO - orders - Generated cancel_id: 4187258274 for order 8723265527
2025-07-08 02:34:07,300 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:34:07,300 - INFO - orders - Non-Barclays user. Cancelling order 8723265527 immediately
2025-07-08 02:34:08,815 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:11,174 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:12,431 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:34:12,819 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931100000', 'o': '0.8931000000'}
2025-07-08 02:34:12,820 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931100000, ask=0.89319931100000
2025-07-08 02:34:12,820 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931100000, ask=0.89319931100000
2025-07-08 02:34:12,822 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:34:12,822 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:34:12,824 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:34:12,825 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:34:12,825 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:34:12,828 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:34:12,828 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:34:12,828 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:34:12,828 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89319931100000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:34:12,893 - INFO - orders - [PERF] Order processing: 0.4591s
2025-07-08 02:34:12,894 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '8954401917', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89319931100000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:34:12,894 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 8954401917
2025-07-08 02:34:12,920 - INFO - orders - [PERF] Order creation: 0.0265s
2025-07-08 02:34:12,920 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:34:12,922 - INFO - orders - Publishing order update for user 1
2025-07-08 02:34:12,925 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:34:12,931 - INFO - orders - Publishing market data trigger
2025-07-08 02:34:12,934 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:12,935 - INFO - orders - [PERF] TOTAL place_order: 0.5046s
2025-07-08 02:34:13,037 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:34:13,731 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:15,684 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:17,935 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:20,201 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:22,054 - INFO - orders - Add stoploss request received - Order ID: 8954401917, User ID: 1
2025-07-08 02:34:22,062 - INFO - orders - Generated stoploss_id: 8452147745 for order 8954401917
2025-07-08 02:34:22,064 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:34:22,064 - INFO - orders - Non-Barclays user. Adding stoploss to order 8954401917 immediately
2025-07-08 02:34:22,091 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:34:22,091 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:34:22,095 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:34:22,099 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:34:22,100 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:34:22,567 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:22,692 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 8954401917 at 0.8931000000 <= 0.89310000 (diff: 0E-10, epsilon: 0.00001, reason: exact match)
2025-07-08 02:34:22,708 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.09931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 8954401917)
2025-07-08 02:34:22,708 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:34:22,710 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:34:22,710 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:34:22,711 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:34:22,713 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:34:22,713 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:34:22,714 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.09931000000000000000000000 CAD / 1.3645100000 = -0.07278070516155982733728591216 USD
2025-07-08 02:34:22,768 - INFO - orders - [ORDER_CLOSE] Successfully closed order 8954401917 for user 1
2025-07-08 02:34:22,770 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:34:22,770 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:34:22,774 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 02:34:22,779 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:34:22,780 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-07-08 02:34:22,818 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:24,797 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:34:27,087 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:35:45,288 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:35:45,289 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:35:49,404 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:35:54,074 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:35:54,083 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:35:57,568 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:35:57,625 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931700000', 'o': '0.8931400000'}
2025-07-08 02:35:57,626 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931700000, ask=0.89325931700000
2025-07-08 02:35:57,626 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931700000, ask=0.89325931700000
2025-07-08 02:35:59,656 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:35:59,656 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:35:59,666 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:35:59,666 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:35:59,666 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:35:59,668 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:35:59,668 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:35:59,669 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:35:59,669 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89325931700000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:35:59,700 - INFO - orders - [PERF] Order processing: 6.5450s
2025-07-08 02:35:59,700 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '1373970024', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89325931700000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:35:59,700 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 1373970024
2025-07-08 02:35:59,715 - INFO - orders - [PERF] Order creation: 0.0148s
2025-07-08 02:35:59,715 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:35:59,715 - INFO - orders - Publishing order update for user 1
2025-07-08 02:36:03,741 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:36:03,744 - INFO - orders - Publishing market data trigger
2025-07-08 02:36:03,747 - INFO - orders - [PERF] TOTAL place_order: 14.3444s
2025-07-08 02:36:03,772 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:36:03,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:03,924 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:03,977 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:04,035 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:04,159 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:04,300 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:06,478 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:08,728 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:11,079 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:13,453 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:14,060 - INFO - orders - Add stoploss request received - Order ID: 1373970024, User ID: 1
2025-07-08 02:36:14,076 - INFO - orders - Generated stoploss_id: 1719458059 for order 1373970024
2025-07-08 02:36:14,079 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:36:14,079 - INFO - orders - Non-Barclays user. Adding stoploss to order 1373970024 immediately
2025-07-08 02:36:14,101 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:36:14,102 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:36:14,106 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:36:14,111 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:36:14,112 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:36:15,701 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:18,158 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:20,533 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:22,765 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:25,116 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:27,375 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:29,628 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:30,251 - INFO - orders - Cancel stoploss request received - Order ID: 1373970024, User ID: 1
2025-07-08 02:36:30,262 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:36:30,305 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:36:30,305 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:36:30,318 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:36:30,326 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:36:30,333 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:36:31,886 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:34,232 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:36,485 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:38,345 - INFO - orders - Add stoploss request received - Order ID: 1373970024, User ID: 1
2025-07-08 02:36:38,355 - INFO - orders - Generated stoploss_id: 1830837722 for order 1373970024
2025-07-08 02:36:38,357 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:36:38,357 - INFO - orders - Non-Barclays user. Adding stoploss to order 1373970024 immediately
2025-07-08 02:36:38,372 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:36:38,372 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:36:38,376 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:36:38,381 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:36:38,382 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:36:38,703 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:38,757 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931300000 <= 0.89313000 (diff: 0E-10, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:38,827 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.12932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:38,827 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:38,828 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:38,829 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:38,829 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:38,833 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:38,833 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:38,833 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.12932000000000000000000000 CAD / 1.3645100000 = -0.09477394815721394493261317249 USD
2025-07-08 02:36:38,917 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:38,917 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:40,997 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:41,033 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:41,054 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:41,054 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:41,061 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:41,061 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:41,061 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:41,096 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:41,096 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:41,096 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:36:41,155 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:41,155 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:43,345 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:43,389 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930900000 <= 0.89313000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:43,404 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.16932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:43,404 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:43,554 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:43,554 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:43,554 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:43,556 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:43,557 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:43,557 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.16932000000000000000000000 CAD / 1.3645100000 = -0.1240885006339271973089240826 USD
2025-07-08 02:36:43,615 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:43,615 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:45,605 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:45,644 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:45,656 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:45,656 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:45,657 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:45,657 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:45,657 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:45,658 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:45,658 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:45,658 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:36:45,746 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:45,746 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:47,871 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:47,925 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:47,992 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:47,993 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:47,997 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:47,997 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:47,998 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:48,002 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:48,002 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:48,002 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:36:48,091 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:48,092 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:50,101 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:50,238 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:50,272 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:50,272 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:50,274 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:50,274 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:50,274 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:50,276 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:50,276 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:50,276 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:36:50,330 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:50,330 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:52,450 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:52,477 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:52,489 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:52,489 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:52,489 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:52,489 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:52,489 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:52,490 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:52,490 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:52,490 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:36:52,555 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:52,555 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:54,676 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:54,692 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:54,700 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:54,701 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:54,701 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:36:55,005 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:55,006 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:56,945 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:56,966 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:56,973 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:56,973 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:56,973 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:56,973 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:56,973 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:56,974 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:56,974 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:56,974 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:36:56,996 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:56,996 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:36:59,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:36:59,234 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:36:59,242 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:36:59,242 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:36:59,243 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:36:59,286 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:36:59,286 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:01,452 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:03,699 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:03,716 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:03,723 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:03,723 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:03,723 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:03,723 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:03,723 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:03,724 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:03,724 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:03,724 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:37:04,082 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:04,082 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:06,059 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:06,076 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:06,083 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:06,084 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:06,084 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:06,084 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:06,084 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:06,084 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:06,085 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:06,085 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:37:06,465 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:06,466 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:08,313 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:08,332 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:08,341 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:08,341 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:08,342 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:37:08,750 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:08,750 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:10,573 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:10,599 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:10,615 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:10,615 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:10,616 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:10,616 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:10,616 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:10,617 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:10,617 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:10,617 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:37:10,676 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:10,676 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:12,820 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:15,085 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:15,107 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930700000 <= 0.89313000 (diff: 0.0000600000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:15,115 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.18932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:15,115 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:15,115 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:15,115 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:15,115 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:15,116 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:15,116 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:15,116 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.18932000000000000000000000 CAD / 1.3645100000 = -0.1387457768722838234970795377 USD
2025-07-08 02:37:15,520 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:15,521 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:17,426 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:17,447 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930700000 <= 0.89313000 (diff: 0.0000600000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:17,455 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.18932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:17,455 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:17,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.18932000000000000000000000 CAD / 1.3645100000 = -0.1387457768722838234970795377 USD
2025-07-08 02:37:17,854 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:17,854 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:19,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:19,713 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:19,722 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:19,722 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:19,723 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:19,723 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:19,723 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:19,724 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:19,724 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:19,724 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:19,765 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:19,765 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:22,031 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:22,049 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:22,057 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:22,057 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:22,058 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:22,427 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:22,427 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:24,240 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:24,258 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:24,266 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:24,266 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:24,266 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:24,266 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:24,266 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:24,267 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:24,267 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:24,267 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:24,399 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:24,399 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:26,516 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:26,531 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:26,536 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:26,536 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:26,536 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:26,536 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:26,536 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:26,537 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:26,537 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:26,537 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:26,556 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:26,556 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:28,852 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:28,868 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:28,874 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:28,874 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:28,874 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:28,874 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:28,875 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:28,875 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:28,875 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:28,875 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:37:29,244 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:29,244 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:31,147 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:31,171 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:31,178 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:31,179 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:31,179 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:31,179 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:31,179 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:31,180 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:31,180 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:31,180 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:37:31,597 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:31,598 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:33,381 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:33,433 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:33,487 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:33,487 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:33,488 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:33,488 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:33,488 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:33,490 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:33,490 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:33,491 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:37:33,559 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:33,560 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:35,756 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:35,778 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931200000 <= 0.89313000 (diff: 0.0000100000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:35,790 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:35,790 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:35,793 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13932000000000000000000000 CAD / 1.3645100000 = -0.1021025862763922580266909000 USD
2025-07-08 02:37:35,888 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:35,889 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:38,009 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:38,029 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930300000 <= 0.89313000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:38,038 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:38,038 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:38,039 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:38,039 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:38,039 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:38,040 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:38,041 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:38,041 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22932000000000000000000000 CAD / 1.3645100000 = -0.1680603293489970758733904479 USD
2025-07-08 02:37:38,446 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:38,446 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:40,979 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:40,997 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930300000 <= 0.89313000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:41,004 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:41,004 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:41,004 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:41,004 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:41,004 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:41,005 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:41,005 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:41,005 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22932000000000000000000000 CAD / 1.3645100000 = -0.1680603293489970758733904479 USD
2025-07-08 02:37:41,027 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:41,028 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:43,317 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:43,336 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930300000 <= 0.89313000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:43,350 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:43,350 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:43,350 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:43,350 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:43,350 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:43,351 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:43,351 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:43,351 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22932000000000000000000000 CAD / 1.3645100000 = -0.1680603293489970758733904479 USD
2025-07-08 02:37:43,402 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:43,402 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:45,584 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:45,603 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930300000 <= 0.89313000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:45,610 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:45,610 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:45,610 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:45,610 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:45,610 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:45,611 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:45,611 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:45,611 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22932000000000000000000000 CAD / 1.3645100000 = -0.1680603293489970758733904479 USD
2025-07-08 02:37:46,042 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:46,043 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:47,808 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:47,853 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:47,889 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:47,889 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:47,890 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:47,890 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:47,890 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:47,891 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:47,891 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:47,891 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:37:47,924 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:47,924 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:50,163 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:50,184 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:50,193 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:50,193 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:50,193 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:50,193 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:50,193 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:50,194 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:50,194 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:50,194 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:37:50,255 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:50,255 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:52,370 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:52,389 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:52,398 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:52,398 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:52,398 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:52,398 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:52,398 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:52,399 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:52,399 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:52,399 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:52,443 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:52,443 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:54,705 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:54,727 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:54,734 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:54,734 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:54,734 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:54,734 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:54,734 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:54,735 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:54,735 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:54,735 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:55,158 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:55,158 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:56,954 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:56,972 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:56,980 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:56,980 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:56,981 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:57,397 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:57,398 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:37:59,225 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:37:59,265 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:37:59,275 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:37:59,275 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:37:59,275 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:37:59,276 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:37:59,276 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:37:59,276 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:37:59,276 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:37:59,276 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:37:59,335 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:37:59,335 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:01,563 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:01,586 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:01,595 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:01,595 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:01,596 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:01,596 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:01,596 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:01,597 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:01,597 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:01,597 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:38:01,639 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:01,639 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:03,863 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:03,878 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:03,883 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:03,883 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:03,883 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:03,883 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:03,883 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:03,884 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:03,884 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:03,884 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:38:04,261 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:04,261 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:06,172 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:06,203 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:06,215 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:06,215 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:06,215 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:06,215 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:06,215 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:06,216 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:06,216 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:06,216 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:38:06,282 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:06,282 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:08,422 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:08,436 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8931000000 <= 0.89313000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:08,441 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:08,441 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:08,442 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:08,442 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:08,442 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:08,442 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:08,443 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:08,443 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15932000000000000000000000 CAD / 1.3645100000 = -0.1167598625147488842148463551 USD
2025-07-08 02:38:08,791 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:08,791 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:10,775 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:10,791 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:10,796 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:10,796 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:10,797 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:38:11,222 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:11,222 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:13,030 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:13,061 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:13,072 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:13,072 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:13,073 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:38:13,113 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:13,113 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:15,279 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:15,293 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:15,299 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:15,300 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:15,300 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:15,742 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:15,742 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:17,534 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:17,557 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:17,568 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:17,568 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:17,569 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:17,569 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:17,569 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:17,570 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:17,570 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:17,570 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:17,964 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:17,964 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:19,890 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:19,918 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:19,927 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:19,927 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:19,928 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:19,981 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:19,981 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:22,145 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:22,174 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:22,188 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:22,188 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:22,188 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:22,189 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:22,189 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:22,189 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:22,189 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:22,189 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:22,256 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:22,257 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:24,393 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:24,407 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:24,412 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:24,412 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:24,412 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:24,412 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:24,412 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:24,413 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:24,413 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:24,413 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:24,434 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:24,434 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:26,680 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:26,700 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:26,708 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:26,708 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:26,708 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:26,708 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:26,708 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:26,709 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:26,709 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:26,709 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:38:26,758 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:26,758 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:28,940 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:28,957 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:28,963 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:28,963 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:28,964 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:38:29,346 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:29,346 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:31,255 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:31,270 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930600000 <= 0.89313000 (diff: 0.0000700000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:31,276 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:31,276 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:31,276 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:31,276 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:31,276 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:31,277 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:31,277 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:31,277 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19932000000000000000000000 CAD / 1.3645100000 = -0.1460744149914621365911572652 USD
2025-07-08 02:38:31,744 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:31,744 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:33,546 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:33,567 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930800000 <= 0.89313000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:33,574 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:33,574 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:33,574 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:33,574 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:33,574 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:33,575 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:33,575 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:33,575 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17932000000000000000000000 CAD / 1.3645100000 = -0.1314171387531055104030018102 USD
2025-07-08 02:38:33,616 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:33,616 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:35,785 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:35,801 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930500000 <= 0.89313000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:35,807 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.20932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:35,807 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:35,808 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.20932000000000000000000000 CAD / 1.3645100000 = -0.1534030531106404496852349928 USD
2025-07-08 02:38:36,213 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:36,213 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1295, in close_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined. Did you mean: 'order_id'?
2025-07-08 02:38:40,615 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:38:40,616 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:38:49,525 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:38:49,528 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:38:52,688 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:56,809 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930400000 <= 0.89313000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:56,825 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.21932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:56,825 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:56,826 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:56,826 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:56,826 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:56,829 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:56,829 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:56,829 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.21932000000000000000000000 CAD / 1.3645100000 = -0.1607316912298187627793127203 USD
2025-07-08 02:38:56,872 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:56,874 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:38:56,896 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:56,940 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930400000 <= 0.89313000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:56,955 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.21932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:56,955 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:56,956 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:56,957 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:56,957 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:56,960 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:56,960 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:56,960 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.21932000000000000000000000 CAD / 1.3645100000 = -0.1607316912298187627793127203 USD
2025-07-08 02:38:57,009 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:57,010 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:38:57,039 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:57,063 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930400000 <= 0.89313000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:57,072 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.21932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:57,072 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:57,073 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:57,073 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:57,073 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:57,074 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:57,074 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:57,074 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.21932000000000000000000000 CAD / 1.3645100000 = -0.1607316912298187627793127203 USD
2025-07-08 02:38:57,108 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:57,110 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:38:57,136 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:57,161 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930400000 <= 0.89313000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:57,169 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.21932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:57,169 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:57,170 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:57,170 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:57,170 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:57,172 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:57,172 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:57,172 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.21932000000000000000000000 CAD / 1.3645100000 = -0.1607316912298187627793127203 USD
2025-07-08 02:38:57,201 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:57,202 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:38:57,224 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:38:57,248 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 1373970024 at 0.8930400000 <= 0.89313000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:38:57,259 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.21932000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1373970024)
2025-07-08 02:38:57,259 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:38:57,259 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:38:57,259 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:38:57,260 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:38:57,261 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:38:57,261 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:38:57,261 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.21932000000000000000000000 CAD / 1.3645100000 = -0.1607316912298187627793127203 USD
2025-07-08 02:38:57,293 - INFO - orders - [ORDER_CLOSE] Successfully closed order 1373970024 for user 1
2025-07-08 02:38:57,294 - ERROR - orders - [ORDER_CLOSE] Error closing order 1373970024: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:38:58,701 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:00,941 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:01,589 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:39:01,943 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931100000', 'o': '0.8930800000'}
2025-07-08 02:39:01,944 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931100000, ask=0.89319931100000
2025-07-08 02:39:01,944 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931100000, ask=0.89319931100000
2025-07-08 02:39:01,945 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:39:01,945 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:01,946 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:39:01,946 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89319931100000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:39:01,988 - INFO - orders - [PERF] Order processing: 0.3975s
2025-07-08 02:39:01,988 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '5313310490', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89319931100000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:39:01,988 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 5313310490
2025-07-08 02:39:01,996 - INFO - orders - [PERF] Order creation: 0.0085s
2025-07-08 02:39:01,996 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:39:01,996 - INFO - orders - Publishing order update for user 1
2025-07-08 02:39:01,997 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:39:01,999 - INFO - orders - Publishing market data trigger
2025-07-08 02:39:02,000 - INFO - orders - [PERF] TOTAL place_order: 0.4118s
2025-07-08 02:39:02,000 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:02,020 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:39:03,307 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:05,569 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:07,836 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:10,166 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:12,428 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:13,299 - INFO - orders - Add stoploss request received - Order ID: 5313310490, User ID: 1
2025-07-08 02:39:13,307 - INFO - orders - Generated stoploss_id: 9872854639 for order 5313310490
2025-07-08 02:39:13,308 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:39:13,308 - INFO - orders - Non-Barclays user. Adding stoploss to order 5313310490 immediately
2025-07-08 02:39:13,322 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:39:13,322 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:39:13,325 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:39:13,327 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:39:13,328 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:39:14,773 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:14,788 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:14,794 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:14,794 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:14,795 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:15,235 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:15,236 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:17,032 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:17,048 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:17,053 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:17,053 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:17,054 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:17,491 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:17,492 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:19,285 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:19,313 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:19,328 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:19,328 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:19,328 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:19,328 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:19,328 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:19,329 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:19,329 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:19,329 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:19,399 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:19,400 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:21,609 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:21,630 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:21,639 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:21,639 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:21,639 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:21,639 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:21,639 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:21,640 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:21,640 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:21,640 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:22,026 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:22,027 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:23,860 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:23,882 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:23,889 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:23,889 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:23,889 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:23,889 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:23,889 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:23,890 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:23,890 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:23,890 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:24,265 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:24,267 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:26,142 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:26,160 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:26,167 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:26,167 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:26,167 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:26,168 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:26,168 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:26,168 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:26,168 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:26,168 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:26,193 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:26,194 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:28,495 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:28,510 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:28,515 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:28,515 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:28,515 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:28,515 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:28,515 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:28,516 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:28,516 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:28,516 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:28,909 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:28,909 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:30,677 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:30,693 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930800000 <= 0.89310000 (diff: 0.0000200000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.11931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:30,700 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.11931000000000000000000000 CAD / 1.3645100000 = -0.08743798139991645352544136723 USD
2025-07-08 02:39:31,138 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:31,140 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:33,004 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:33,028 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:33,043 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:33,043 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:33,044 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:33,044 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:33,044 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:33,045 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:33,045 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:33,045 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:33,095 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:33,095 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:35,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:35,257 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930500000 <= 0.89310000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:35,264 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.14931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:35,264 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:35,267 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.14931000000000000000000000 CAD / 1.3645100000 = -0.1094238957574513928076745498 USD
2025-07-08 02:39:35,291 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:35,308 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:37,609 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:37,629 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930500000 <= 0.89310000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.14931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:37,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.14931000000000000000000000 CAD / 1.3645100000 = -0.1094238957574513928076745498 USD
2025-07-08 02:39:37,659 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:37,660 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:39,861 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:39,878 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930500000 <= 0.89310000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:39,885 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.14931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:39,885 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:39,885 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:39,885 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:39,885 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:39,886 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:39,886 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:39,886 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.14931000000000000000000000 CAD / 1.3645100000 = -0.1094238957574513928076745498 USD
2025-07-08 02:39:40,219 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:40,221 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:42,115 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:42,128 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930500000 <= 0.89310000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:42,134 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.14931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:42,134 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:42,134 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:42,134 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:42,134 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:42,135 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:42,135 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:42,135 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.14931000000000000000000000 CAD / 1.3645100000 = -0.1094238957574513928076745498 USD
2025-07-08 02:39:42,562 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:42,563 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:39:44,470 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:39:44,484 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8930600000 <= 0.89310000 (diff: 0.0000400000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:39:44,492 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.13931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:39:44,492 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:39:44,492 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:39:44,492 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:39:44,492 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:39:44,493 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:39:44,493 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:39:44,493 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.13931000000000000000000000 CAD / 1.3645100000 = -0.1020952576382730797135968223 USD
2025-07-08 02:39:44,851 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:39:44,851 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:40:50,464 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:40:50,464 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:40:59,419 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:40:59,421 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:41:02,551 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:06,647 - WARNING - orders - [SLTP_CHECK] No adjusted price available for AUDCAD in group Group B
2025-07-08 02:41:06,662 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:06,682 - WARNING - orders - [SLTP_CHECK] No adjusted price available for AUDCAD in group Group B
2025-07-08 02:41:06,699 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:06,721 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8929200000 <= 0.89310000 (diff: 0.0001800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:41:06,731 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.27931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:41:06,731 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:41:06,732 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:41:06,732 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:41:06,732 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:41:06,733 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:41:06,733 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:41:06,733 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.27931000000000000000000000 CAD / 1.3645100000 = -0.2046961913067694630306850078 USD
2025-07-08 02:41:06,770 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:41:06,771 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:41:06,789 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:06,808 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5313310490 at 0.8929200000 <= 0.89310000 (diff: 0.0001800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:41:06,817 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.27931000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5313310490)
2025-07-08 02:41:06,817 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:41:06,818 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:41:06,818 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:41:06,818 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:41:06,819 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:41:06,819 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:41:06,819 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.27931000000000000000000000 CAD / 1.3645100000 = -0.2046961913067694630306850078 USD
2025-07-08 02:41:06,844 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5313310490 for user 1
2025-07-08 02:41:06,845 - ERROR - orders - [ORDER_CLOSE] Error closing order 5313310490: name 'update_static_orders_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1296, in close_order
    await update_static_orders_cache(order_user_id, db, redis_client, user_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'update_static_orders_cache' is not defined. Did you mean: 'set_user_static_orders_cache'?
2025-07-08 02:41:07,209 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:09,563 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:13,962 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:41:13,963 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:41:22,980 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:41:22,983 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:41:26,131 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:32,293 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:32,326 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:32,358 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:32,390 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:32,431 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:34,775 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:36,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:39,261 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:41,527 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:43,854 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:41:48,496 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:41:48,496 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:41:57,389 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:41:57,393 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:42:00,582 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:42:04,897 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:42:05,067 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:42:05,169 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:42:05,328 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:42:35,467 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:42:35,467 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:42:44,507 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:42:44,507 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:42:53,478 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:42:53,482 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:42:56,624 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:00,824 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:00,870 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:00,924 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:01,482 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:03,734 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:06,093 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:07,168 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:43:07,532 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8928600000', 'o': '0.8928400000'}
2025-07-08 02:43:07,533 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8928600000, ask=0.89294928600000
2025-07-08 02:43:07,533 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8928600000, ask=0.89294928600000
2025-07-08 02:43:07,534 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:43:07,534 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:43:07,535 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:43:07,536 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89294928600000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:43:07,549 - INFO - orders - [PERF] Order processing: 0.3809s
2025-07-08 02:43:07,549 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '7090084040', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89294928600000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:43:07,550 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 7090084040
2025-07-08 02:43:07,563 - INFO - orders - [PERF] Order creation: 0.0133s
2025-07-08 02:43:07,563 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:43:07,563 - INFO - orders - Publishing order update for user 1
2025-07-08 02:43:07,563 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:43:07,564 - INFO - orders - Publishing market data trigger
2025-07-08 02:43:07,565 - INFO - orders - [PERF] TOTAL place_order: 0.3973s
2025-07-08 02:43:07,565 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:07,598 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:43:08,344 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:10,700 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:12,964 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:15,208 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:17,471 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:19,809 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:20,252 - INFO - orders - Add stoploss request received - Order ID: 7090084040, User ID: 1
2025-07-08 02:43:20,259 - INFO - orders - Generated stoploss_id: 1862809515 for order 7090084040
2025-07-08 02:43:20,260 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:43:20,260 - INFO - orders - Non-Barclays user. Adding stoploss to order 7090084040 immediately
2025-07-08 02:43:20,270 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:43:20,270 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:43:20,272 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:43:20,275 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:43:20,276 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:43:22,067 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:24,322 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:26,583 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:29,387 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:31,694 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:33,953 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:36,303 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:38,510 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:38,524 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927900000 <= 0.89280000 (diff: 0.0000100000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:43:38,531 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.15929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:43:38,531 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:43:38,532 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.15929000000000000000000000 CAD / 1.3645100000 = -0.1167378766003913492755641219 USD
2025-07-08 02:43:38,932 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:43:38,932 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:43:40,926 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:43,073 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:45,453 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:47,735 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:50,022 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:52,273 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:54,530 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:56,888 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:43:59,247 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:01,592 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:03,847 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:06,108 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:08,456 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:10,711 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:12,982 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:13,007 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927700000 <= 0.89280000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:13,020 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.17929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:13,020 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:13,020 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:13,020 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:13,020 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:13,021 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:13,021 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:13,021 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.17929000000000000000000000 CAD / 1.3645100000 = -0.1313951528387479754637195770 USD
2025-07-08 02:44:13,086 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:13,086 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:15,317 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:15,335 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927500000 <= 0.89280000 (diff: 0.0000500000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:15,343 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.19929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:15,343 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:15,343 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:15,343 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:15,343 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:15,344 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:15,344 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:15,344 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.19929000000000000000000000 CAD / 1.3645100000 = -0.1460524290771046016518750321 USD
2025-07-08 02:44:16,386 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:16,386 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:17,543 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:19,821 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:19,836 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927100000 <= 0.89280000 (diff: 0.0000900000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:19,843 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.23929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:19,843 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:19,843 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:19,843 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:19,843 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:19,844 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:19,844 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:19,844 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.23929000000000000000000000 CAD / 1.3645100000 = -0.1753669815538178540281859422 USD
2025-07-08 02:44:20,280 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:20,280 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:24,990 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:44:24,990 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:44:33,765 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:44:33,768 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:44:36,958 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:41,080 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927200000 <= 0.89280000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:41,097 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:41,097 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:41,098 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:41,098 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:41,098 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:41,103 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:41,103 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:41,103 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22929000000000000000000000 CAD / 1.3645100000 = -0.1680383434346395409341082147 USD
2025-07-08 02:44:41,147 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:41,147 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:41,166 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:41,214 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927200000 <= 0.89280000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:41,235 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:41,236 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:41,238 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:41,238 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:41,238 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:41,241 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:41,241 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:41,241 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22929000000000000000000000 CAD / 1.3645100000 = -0.1680383434346395409341082147 USD
2025-07-08 02:44:41,290 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:41,291 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:41,310 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:41,331 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927200000 <= 0.89280000 (diff: 0.0000800000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:41,343 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.22929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:41,343 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:41,345 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:41,345 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:41,345 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:41,348 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:41,348 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:41,348 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.22929000000000000000000000 CAD / 1.3645100000 = -0.1680383434346395409341082147 USD
2025-07-08 02:44:41,391 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:41,391 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:41,419 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:41,439 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927000000 <= 0.89280000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:41,446 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.24929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:41,446 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:41,447 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:41,448 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:41,448 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:41,449 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:41,449 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:41,449 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.24929000000000000000000000 CAD / 1.3645100000 = -0.1826956196729961671222636697 USD
2025-07-08 02:44:41,476 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:41,476 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:41,491 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:41,507 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 7090084040 at 0.8927000000 <= 0.89280000 (diff: 0.0001000000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:44:41,515 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.24929000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7090084040)
2025-07-08 02:44:41,515 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:44:41,516 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:44:41,516 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:44:41,516 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:44:41,517 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:44:41,517 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:44:41,517 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.24929000000000000000000000 CAD / 1.3645100000 = -0.1826956196729961671222636697 USD
2025-07-08 02:44:41,540 - INFO - orders - [ORDER_CLOSE] Successfully closed order 7090084040 for user 1
2025-07-08 02:44:41,540 - ERROR - orders - [ORDER_CLOSE] Error closing order 7090084040: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\pending_orders.py", line 1290, in close_order
    from app.api.v1.endpoints.market_data_ws import update_static_orders_cache, publish_order_update, publish_user_data_update
ImportError: cannot import name 'publish_order_update' from 'app.api.v1.endpoints.market_data_ws' (C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\market_data_ws.py)
2025-07-08 02:44:42,757 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:45,111 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:47,365 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:49,643 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:51,975 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:54,205 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:56,482 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:44:58,841 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:01,098 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:03,347 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:05,603 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:11,623 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:45:11,624 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:45:20,562 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:45:20,566 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:45:23,811 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:28,285 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:28,612 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:28,863 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:29,626 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:30,790 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:33,121 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:35,395 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:37,660 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:39,175 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:45:39,597 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8927400000', 'o': '0.8927100000'}
2025-07-08 02:45:39,597 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8927400000, ask=0.89282927400000
2025-07-08 02:45:39,597 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8927400000, ask=0.89282927400000
2025-07-08 02:45:39,601 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:45:39,601 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:45:39,604 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:45:39,604 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:45:39,604 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:45:39,612 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:45:39,613 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:45:39,613 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:45:39,613 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89282927400000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:45:39,683 - INFO - orders - [PERF] Order processing: 0.5033s
2025-07-08 02:45:39,684 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '5176192250', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89282927400000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:45:39,685 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 5176192250
2025-07-08 02:45:39,720 - INFO - orders - [PERF] Order creation: 0.0369s
2025-07-08 02:45:39,721 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:45:39,721 - INFO - orders - Publishing order update for user 1
2025-07-08 02:45:39,724 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:45:39,729 - INFO - orders - Publishing market data trigger
2025-07-08 02:45:39,733 - INFO - orders - [PERF] TOTAL place_order: 0.5590s
2025-07-08 02:45:39,735 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:39,967 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:45:42,139 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:42,316 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:44,564 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:46,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:49,045 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:51,392 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:52,559 - INFO - orders - Add stoploss request received - Order ID: 5176192250, User ID: 1
2025-07-08 02:45:52,609 - INFO - orders - Generated stoploss_id: 4233841153 for order 5176192250
2025-07-08 02:45:52,613 - INFO - orders - User 1 is_barclays_live_user: False
2025-07-08 02:45:52,614 - INFO - orders - Non-Barclays user. Adding stoploss to order 5176192250 immediately
2025-07-08 02:45:52,668 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 02:45:52,668 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 02:45:52,676 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 02:45:52,683 - INFO - orders - Fetched 0 pending orders for user 1
2025-07-08 02:45:52,686 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-07-08 02:45:53,667 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:53,730 - WARNING - orders - [SLTP_CHECK] Stop loss triggered for BUY order 5176192250 at 0.8927000000 <= 0.89273000 (diff: 0.0000300000, epsilon: 0.00001, reason: exact match)
2025-07-08 02:45:53,865 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.12927000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5176192250)
2025-07-08 02:45:53,865 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:45:53,870 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:45:53,870 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:45:53,870 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:45:53,877 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:45:53,877 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:45:53,877 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.12927000000000000000000000 CAD / 1.3645100000 = -0.09473730496661805336714278386 USD
2025-07-08 02:45:53,935 - INFO - orders - [ORDER_CLOSE] Successfully closed order 5176192250 for user 1
2025-07-08 02:45:55,905 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:45:58,156 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:04,074 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:48:04,074 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:48:13,125 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:48:13,129 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:48:13,136 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:17,511 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:19,764 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:20,147 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:22,281 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:24,506 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:27,196 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:28,972 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:31,215 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:33,466 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:35,806 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:38,290 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:40,645 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:42,891 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:45,147 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:47,354 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:49,629 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:52,001 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:48:58,448 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:48:58,449 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:49:07,711 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:49:07,712 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:49:16,806 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:49:16,809 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:49:19,953 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:22,121 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:22,206 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:22,308 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:23,846 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:26,106 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:28,353 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:30,699 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:32,866 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:35,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:37,465 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:39,727 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:41,981 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:44,296 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:46,908 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:48,831 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:51,191 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:53,445 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:55,699 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:49:57,945 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:00,197 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:03,071 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:05,312 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:07,591 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:09,871 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:12,213 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:14,467 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:16,708 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:18,979 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:21,279 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:23,546 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:25,881 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:28,200 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:30,460 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:32,847 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:35,060 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:37,344 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:39,757 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:42,023 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:44,267 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:46,634 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:48,879 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:51,235 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:53,492 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:55,863 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:50:58,125 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:00,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:02,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:04,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:07,228 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:09,564 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:11,829 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:14,083 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:16,423 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:18,685 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:21,039 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:23,278 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:25,638 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:27,898 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:30,151 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:32,542 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:34,877 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:37,129 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:39,370 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:41,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:43,892 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:46,211 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:48,469 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:50,738 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:53,080 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:55,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:57,596 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:51:59,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:52:02,118 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:52:04,410 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:52:06,761 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:52:09,026 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:52:15,795 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:52:15,796 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:54:12,403 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 02:54:12,403 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 02:54:17,146 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 02:54:21,645 - INFO - orders - Starting the pending order checker background task.
2025-07-08 02:54:21,652 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 02:54:24,886 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:29,747 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8929500000', 'o': '0.8929400000'}
2025-07-08 02:54:29,747 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8929500000, ask=0.89303929500000
2025-07-08 02:54:29,747 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8929500000, ask=0.89303929500000
2025-07-08 02:54:29,761 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:54:29,761 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:54:29,774 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:54:29,774 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:54:29,774 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:54:29,779 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:54:29,779 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:54:29,779 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:54:29,780 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89303929500000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:54:29,845 - INFO - orders - [PERF] Order processing: 7.0329s
2025-07-08 02:54:29,845 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '9724896871', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89303929500000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:54:29,846 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 9724896871
2025-07-08 02:54:29,884 - INFO - orders - [PERF] Order creation: 0.0391s
2025-07-08 02:54:29,884 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:54:29,884 - INFO - orders - Publishing order update for user 1
2025-07-08 02:54:29,886 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:54:29,889 - INFO - orders - Publishing market data trigger
2025-07-08 02:54:29,891 - INFO - orders - [PERF] TOTAL place_order: 12.7458s
2025-07-08 02:54:29,903 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:29,927 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:54:30,007 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:30,103 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:30,247 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:30,310 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:32,484 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:34,838 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:36,748 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: SELL
2025-07-08 02:54:37,175 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:37,185 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8929500000', 'o': '0.8929400000'}
2025-07-08 02:54:37,186 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8929500000, ask=0.89303929500000
2025-07-08 02:54:37,186 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8929500000, ask=0.89303929500000
2025-07-08 02:54:37,194 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 02:54:37,195 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:54:37,205 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:54:37,205 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:54:37,206 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:54:37,212 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:54:37,212 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:54:37,212 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:54:37,212 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: SELL, Qty: 0.01, Price: 0.8929500000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 02:54:37,362 - INFO - orders - [PERF] Order processing: 0.6015s
2025-07-08 02:54:37,363 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '7530554404', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8929500000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:54:37,364 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 7530554404
2025-07-08 02:54:37,391 - INFO - orders - [PERF] Order creation: 0.0285s
2025-07-08 02:54:37,391 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 02:54:37,392 - INFO - orders - Publishing order update for user 1
2025-07-08 02:54:41,454 - INFO - orders - Publishing user data update for user 1
2025-07-08 02:54:41,481 - INFO - orders - Publishing market data trigger
2025-07-08 02:54:41,496 - INFO - orders - [PERF] TOTAL place_order: 4.7555s
2025-07-08 02:54:41,757 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:41,760 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:54:41,881 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:42,059 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:44,098 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:46,348 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:48,699 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:50,867 - INFO - orders - Order placement request received - User: 4, Symbol: AUDCAD, Type: BUY
2025-07-08 02:54:51,299 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:51,323 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8929900000', 'o': '0.8929700000'}
2025-07-08 02:54:51,325 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8929900000, ask=0.89307929900000
2025-07-08 02:54:51,326 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8929900000, ask=0.89307929900000
2025-07-08 02:54:51,342 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 4, position: None)
2025-07-08 02:54:51,343 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 02:54:51,353 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 02:54:51,353 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 02:54:51,354 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 02:54:51,360 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 02:54:51,361 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 02:54:51,361 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 02:54:51,361 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89307929900000, Margin: 6.544473840426233593011410690, Commission: 0.00
2025-07-08 02:54:51,376 - INFO - orders - [PERF] Order processing: 0.5003s
2025-07-08 02:54:51,377 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '2288911250', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89307929900000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.00'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 02:54:51,378 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 2288911250
2025-07-08 02:54:51,547 - INFO - orders - [PERF] Order creation: 0.1703s
2025-07-08 02:54:51,547 - INFO - orders - is_barclays_live_user in place_order: True
2025-07-08 02:54:51,548 - INFO - orders - [BARCLAYS] Scheduling barclays_push in place_order
2025-07-08 02:54:51,548 - INFO - orders - Publishing order update for user 4
2025-07-08 02:54:51,554 - INFO - orders - Publishing user data update for user 4
2025-07-08 02:54:51,562 - INFO - orders - Publishing market data trigger
2025-07-08 02:54:51,569 - INFO - orders - [PERF] TOTAL place_order: 0.7040s
2025-07-08 02:54:51,642 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:51,732 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:54:51,742 - INFO - orders - [BARCLAYS] barclays_push called in place_order
2025-07-08 02:54:51,751 - DEBUG - orders - [BARCLAYS] Calling send_order_to_firebase with data: {'order_id': '2288911250', 'user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': 0.01, 'price': 0.893079299, 'status': 'OPEN', 'contract_value': 1000.0}
2025-07-08 02:54:53,322 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:55,563 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:54:57,814 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:00,168 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:01,115 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 02:55:01,162 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 02:55:01,169 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Standard', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('6599.06000000'), 'margin': Decimal('78.00000000'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-07-08 02:55:01,171 - INFO - orders - [DEBUG] Group name: Standard
2025-07-08 02:55:01,175 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 02:55:01,176 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 02:55:01,176 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 02:55:01,179 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-07-08 02:55:01,188 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 02:55:01,196 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 02:55:01,202 - INFO - orders - Calculated initial margin: None, commission: None for pending order 9058169213
2025-07-08 02:55:01,226 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9058169213', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '7127557786', 'takeprofit_id': '3080550698', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 02:55:01,227 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-07-08 02:55:01,227 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-07-08 02:55:01,228 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '9058169213', 'order_status': 'PENDING_PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '7127557786', 'takeprofit_id': '3080550698', 'close_id': None}
2025-07-08 02:55:01,228 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '9058169213', 'order_status': 'PENDING_PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '7127557786', 'takeprofit_id': '3080550698', 'close_id': None}
2025-07-08 02:55:01,229 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 9058169213
2025-07-08 02:55:01,302 - INFO - orders - Order 9058169213 verified in database on attempt 1 before adding to Redis.
2025-07-08 02:55:01,307 - INFO - orders - Skipping Redis storage for Barclays user pending order 9058169213
2025-07-08 02:55:01,314 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 910, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 02:55:01,327 - INFO - orders - [PERF] TOTAL place_order: 0.2115s
2025-07-08 02:55:01,423 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 02:55:01,425 - INFO - orders - [BARCLAYS] barclays_push called for user 4, is_barclays_live_user=True
2025-07-08 02:55:01,425 - DEBUG - orders - [BARCLAYS] Calling send_order_to_firebase with data: {'order_id': '9058169213', 'order_company_name': 'AUDCAD', 'order_price': 0.88, 'contract_value': 1000.0, 'order_quantity': 0.01, 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING-PROCESSING', 'status': 'PENDING', 'action': 'place_pending_order'}
2025-07-08 02:55:02,552 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:04,698 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:07,028 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:09,405 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:11,565 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:13,900 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:16,243 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:18,601 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:20,811 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:21,740 - INFO - orders - Order close request received - Order ID: 6866600215, User ID: 4, Close Price: 0.999875
2025-07-08 02:55:21,742 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000002542AC18550>, type: <class 'app.database.models.User'>, user_type: live, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 02:55:21,742 - INFO - orders - Using order model: user_orders for user 4 (user_type: live)
2025-07-08 02:55:21,745 - INFO - orders - Request to close order 6866600215 for user 4 (user_type: live) with price 0.999875. Frontend provided type: BUY, company: AUDSGD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 02:55:21,770 - INFO - orders - User group: Standard, sending_orders setting: barclays
2025-07-08 02:55:21,771 - INFO - orders - Live user 4 from group 'Standard' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-07-08 02:55:21,790 - INFO - orders - [FIREBASE_CLOSE_REQUEST] Preparing to send payload for user-initiated close: {'order_id': '6866600215', 'close_price': '0.999875', 'user_id': 4, 'order_type': 'BUY', 'order_company_name': 'AUDSGD', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'order_status': 'CLOSED', 'status': 'CLOSED', 'action': 'close_order', 'close_id': '9632596793'}
2025-07-08 02:55:23,341 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:25,470 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:27,706 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:29,975 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:30,164 - INFO - orders - Add stoploss request received - Order ID: 6866600215, User ID: 4
2025-07-08 02:55:30,194 - INFO - orders - Generated stoploss_id: 8582589327 for order 6866600215
2025-07-08 02:55:30,204 - INFO - orders - User 4 is_barclays_live_user: True
2025-07-08 02:55:30,204 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 6866600215
2025-07-08 02:55:30,630 - INFO - orders - Stoploss request sent to Firebase for order 6866600215
2025-07-08 02:55:32,288 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:34,515 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:36,811 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:38,874 - INFO - orders - Add takeprofit request received - Order ID: 6866600215, User ID: 4
2025-07-08 02:55:38,905 - INFO - orders - Generated takeprofit_id: 6147918838 for order 6866600215
2025-07-08 02:55:38,911 - INFO - orders - User 4 is_barclays_live_user: True
2025-07-08 02:55:38,911 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 6866600215
2025-07-08 02:55:39,333 - INFO - orders - Takeprofit request sent to Firebase for order 6866600215
2025-07-08 02:55:39,339 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:41,420 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:43,680 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:46,042 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 02:55:48,282 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:17,551 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 04:16:17,551 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 04:16:26,569 - INFO - orders - Starting the pending order checker background task.
2025-07-08 04:16:26,572 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 04:16:29,715 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:33,927 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:34,018 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:34,114 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:34,213 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:35,771 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:38,036 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:40,318 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:42,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:44,882 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:47,135 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:49,511 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:51,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:54,042 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:56,282 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:16:58,518 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:00,886 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:03,134 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:05,385 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:07,650 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:09,991 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:12,242 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:14,495 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:16,747 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:19,004 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:21,353 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:23,605 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:26,372 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:28,629 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:30,990 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:33,137 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:35,478 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:37,721 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:40,078 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:42,337 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:44,685 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:46,947 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:49,203 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:51,459 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:53,724 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:56,011 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:17:58,306 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:00,696 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:02,884 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:05,173 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:07,945 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:10,198 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:12,459 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:14,773 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:17,005 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:19,325 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:21,585 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:23,863 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:26,139 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:28,426 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:30,807 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:33,036 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:35,297 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:37,533 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:39,817 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:42,125 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:44,369 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:46,656 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:48,932 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:51,208 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:55,079 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:55,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:18:58,042 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:00,328 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:02,610 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:04,879 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:07,141 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:09,437 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:11,710 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:14,009 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:16,238 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:18,521 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:20,826 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:23,091 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:25,353 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:27,683 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:29,982 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:32,272 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:34,530 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:36,784 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:39,078 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:41,355 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:43,636 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:45,915 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:48,191 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:50,475 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:52,786 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:55,028 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:57,319 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:19:59,586 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:20:01,892 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:20:04,169 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:34,061 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 04:39:34,061 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 04:39:42,975 - INFO - orders - Starting the pending order checker background task.
2025-07-08 04:39:42,977 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 04:39:46,107 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:50,282 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:50,373 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:50,457 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:50,555 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:52,094 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:56,415 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:56,688 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:39:58,963 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:01,259 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:03,583 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:05,936 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:08,137 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:10,425 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:12,736 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:15,021 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:17,278 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:19,585 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:21,843 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:24,127 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:26,432 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:28,763 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:31,109 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:33,361 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:35,611 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:37,884 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:40,200 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:42,450 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:44,823 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:47,032 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:49,320 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:40:53,873 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:52:40,930 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 04:52:40,930 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 04:52:49,881 - INFO - orders - Starting the pending order checker background task.
2025-07-08 04:52:49,882 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 04:52:49,884 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:52:56,089 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:52:56,154 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:52:56,870 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:52:59,224 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:01,459 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:03,842 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:06,082 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:08,365 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:10,669 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:12,969 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:15,299 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:17,559 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:19,914 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:22,169 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:24,467 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:26,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:29,112 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:31,356 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:33,660 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:35,990 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:38,284 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:40,588 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:42,902 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:45,282 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:47,565 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:49,806 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:52,131 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:54,411 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:56,734 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:53:58,989 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:01,362 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:03,717 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:05,920 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:08,226 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:10,587 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:12,812 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:15,115 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:17,451 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:19,805 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:22,016 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:24,410 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:26,661 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:28,956 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:31,267 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:33,548 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:35,877 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:38,246 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:40,485 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:42,835 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:45,078 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:47,441 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:54:49,695 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:57:50,193 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 04:57:50,193 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 04:57:59,173 - INFO - orders - Starting the pending order checker background task.
2025-07-08 04:57:59,173 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 04:58:03,264 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:09,448 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:09,491 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:09,533 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:09,574 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:10,930 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:13,275 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:15,620 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:17,890 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:20,227 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:22,481 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 04:58:24,841 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:09,268 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 05:08:09,268 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 05:08:18,712 - INFO - orders - Starting the pending order checker background task.
2025-07-08 05:08:18,715 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 05:08:21,845 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:28,016 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:28,074 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:28,128 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:28,191 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:29,405 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:31,717 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:34,001 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:36,370 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:38,597 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:40,857 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:43,222 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:45,475 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:47,723 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:08:50,087 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:13,804 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 05:13:13,804 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 05:13:23,096 - INFO - orders - Starting the pending order checker background task.
2025-07-08 05:13:23,100 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 05:13:28,288 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:28,847 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 05:13:30,503 - ERROR - orders - Could not get current market prices for AUDCAD
2025-07-08 05:13:30,503 - ERROR - orders - Unexpected error in place_order: 500: Could not get current market prices for AUDCAD
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 648, in place_pending_order
    raise HTTPException(
    ...<2 lines>...
    )
fastapi.exceptions.HTTPException: 500: Could not get current market prices for AUDCAD
2025-07-08 05:13:32,677 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:32,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:32,898 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:33,022 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:33,142 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:34,208 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:36,619 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:38,843 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:38,847 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-07-08 05:13:38,854 - INFO - orders - Validating pending order price: Order type=BUY_LIMIT, Order price=0.88, Current buy price=0.8926500000, Current sell price=0.8926100000
2025-07-08 05:13:38,859 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-07-08 05:13:38,861 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('24916.56000000'), 'margin': Decimal('0E-8'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-07-08 05:13:38,861 - INFO - orders - [DEBUG] Group name: Group B
2025-07-08 05:13:38,863 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-07-08 05:13:38,863 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-07-08 05:13:38,863 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-07-08 05:13:38,863 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-07-08 05:13:38,866 - INFO - orders - [SYMBOL_INFO] Retrieved external symbol info for AUDCAD: contract_size=100000.00000000, profit_currency=CAD, digit=5.00000
2025-07-08 05:13:38,868 - ERROR - orders - [MARGIN_CALC] Error in calculate_single_order_margin: argument of type 'coroutine' is not iterable
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 121, in calculate_single_order_margin
    if not raw_market_data or symbol not in raw_market_data:
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument of type 'coroutine' is not iterable
2025-07-08 05:13:38,869 - INFO - orders - Calculated initial margin: None, commission: None for pending order 2482715048
2025-07-08 05:13:38,875 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '2482715048', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '4724619083', 'takeprofit_id': '4864078081', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'open_time': None}
2025-07-08 05:13:38,875 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-07-08 05:13:38,875 - INFO - orders - [ENTER-CRUD] create_order called with: {'order_id': '2482715048', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '4724619083', 'takeprofit_id': '4864078081', 'close_id': None}
2025-07-08 05:13:38,875 - DEBUG - orders - [DEBUG][create_order] Received order_data: {'order_id': '2482715048', 'order_status': 'PENDING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'commission': None, 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '4724619083', 'takeprofit_id': '4864078081', 'close_id': None}
2025-07-08 05:13:38,876 - DEBUG - orders - [DEBUG][create_order] Created OrderActionHistory record for order_id: 2482715048
2025-07-08 05:13:38,918 - INFO - orders - Order 2482715048 verified in database on attempt 1 before adding to Redis.
2025-07-08 05:13:38,920 - INFO - orders - Pending order 2482715048 added to Redis for non-Barclays user or demo user.
2025-07-08 05:13:38,922 - ERROR - orders - Error updating user data cache after order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 910, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache, user_type)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-07-08 05:13:38,924 - INFO - orders - [PERF] TOTAL place_order: 0.0771s
2025-07-08 05:13:38,936 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:13:41,049 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:43,486 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:46,092 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:47,944 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:49,354 - WARNING - orders - Pending order 2482715048 already exists in Redis. Skipping add.
2025-07-08 05:13:49,355 - INFO - orders - User data cache updated for user 1 after modifying pending order
2025-07-08 05:13:50,310 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:52,523 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:54,816 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:59,135 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:13:59,426 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:01,674 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:03,914 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:06,169 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:08,439 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:10,794 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:12,984 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:15,247 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:17,659 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:19,906 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:22,139 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:24,507 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:26,767 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:28,981 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:31,382 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:33,622 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:35,874 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:38,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:40,484 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:42,737 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:45,093 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:47,351 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:49,605 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:51,964 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:54,204 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:56,457 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:14:58,715 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:01,064 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:03,320 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:05,572 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:07,942 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:10,202 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:12,542 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:14,805 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:17,056 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:19,413 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:21,573 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:24,561 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:26,903 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:29,138 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:31,483 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:33,743 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:36,018 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:38,254 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:40,638 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:42,875 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:45,114 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:47,361 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:49,639 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:51,979 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:54,237 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:56,464 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:15:58,722 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:00,996 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:03,334 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:05,580 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:07,935 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:10,184 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:12,445 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:14,828 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:17,052 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:19,302 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:21,614 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:23,903 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:26,125 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:28,411 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:30,681 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:33,033 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:35,272 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:37,634 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:39,881 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:42,133 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:44,384 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:46,665 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:49,005 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:51,213 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:53,475 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:55,854 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:16:58,026 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:00,302 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:02,572 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:04,967 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:07,223 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:09,472 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:11,724 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:17:13,976 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:28,687 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 05:23:28,687 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 05:23:37,772 - INFO - orders - Starting the pending order checker background task.
2025-07-08 05:23:37,775 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 05:23:40,901 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:45,096 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:45,138 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:45,182 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:45,218 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:47,214 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:49,530 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:51,898 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:56,913 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:23:59,585 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:02,233 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:04,774 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:07,153 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:09,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:13,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:13,994 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:16,371 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:18,721 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:20,979 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:23,331 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:25,949 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:28,253 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:30,605 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:32,863 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:35,242 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:37,498 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:39,867 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:42,125 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:46,580 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:46,838 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:49,119 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:51,369 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:53,657 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:55,907 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:24:58,174 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:00,452 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:02,741 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:05,111 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:07,380 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:09,621 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:11,870 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:14,227 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:16,481 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:18,732 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:21,036 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:23,341 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:25,597 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:27,854 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:30,112 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:32,398 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:34,676 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:36,970 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:39,311 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:41,566 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:43,817 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:46,101 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:48,697 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:51,087 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:53,364 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:55,601 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:25:57,864 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:00,202 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:02,433 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:04,809 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:07,062 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:09,314 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:11,566 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:13,829 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:16,149 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:18,435 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:20,804 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:23,057 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:25,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:27,671 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:29,934 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:32,162 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:34,538 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:36,802 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:39,025 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:41,292 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:43,658 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:45,835 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:48,252 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:50,410 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:52,763 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:55,019 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:57,364 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:26:59,590 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:01,870 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:04,527 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:06,896 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:09,137 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:11,400 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:13,664 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:16,008 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:18,354 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:20,618 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:22,873 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:25,206 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:27,565 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:29,814 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:32,076 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:34,438 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:36,691 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:38,949 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:41,191 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:43,550 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:45,756 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:48,050 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:50,309 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:52,663 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:54,944 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:57,210 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:27:59,524 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:01,795 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:04,132 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:06,430 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:08,736 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:11,017 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:13,344 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:15,647 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:17,942 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:20,187 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:22,579 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:24,800 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:27,129 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:29,413 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:31,773 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:33,979 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:36,257 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:38,619 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:40,820 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:43,153 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:45,512 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:47,750 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:50,005 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:52,262 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:54,628 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:56,850 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:28:59,134 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:01,443 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:03,727 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:06,077 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:08,325 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:10,644 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:12,945 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:15,292 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:17,548 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:19,816 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:22,061 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:24,410 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:26,664 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:28,909 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:31,245 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:33,512 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:35,792 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:38,499 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:40,793 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:43,127 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:45,371 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:47,731 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:49,954 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:52,316 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:54,591 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:56,955 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:29:59,130 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:01,455 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:03,807 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:06,077 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:08,313 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:10,610 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:12,920 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:15,212 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:17,625 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:19,805 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:22,146 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:24,498 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:26,746 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:29,013 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:31,483 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:33,709 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:35,971 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:38,204 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:40,573 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:42,837 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:45,288 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:47,580 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:49,908 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:52,253 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:30:54,608 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:24,841 - INFO - orders - Application starting up - Orders logging initialized
2025-07-08 05:32:24,841 - INFO - orders - SL/TP Epsilon accuracy configured: 0.00001
2025-07-08 05:32:33,758 - INFO - orders - Starting the pending order checker background task.
2025-07-08 05:32:33,761 - INFO - orders - Starting the SL/TP checker task (triggered by market updates).
2025-07-08 05:32:36,949 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:43,133 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:43,166 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:43,241 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:43,308 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:43,371 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:45,218 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:47,500 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:49,901 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:52,171 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:54,446 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:57,917 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:32:59,058 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:01,341 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:03,726 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:05,943 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:08,345 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:10,584 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:12,839 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:15,190 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:17,452 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:17,823 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 05:33:18,164 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8930300000', 'o': '0.8930000000'}
2025-07-08 05:33:18,164 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8930300000, ask=0.89311930300000
2025-07-08 05:33:18,165 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8930300000, ask=0.89311930300000
2025-07-08 05:33:18,166 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 05:33:18,166 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:18,167 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 05:33:18,167 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89311930300000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 05:33:18,183 - INFO - orders - [PERF] Order processing: 0.3579s
2025-07-08 05:33:18,183 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '3577948919', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89311930300000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 05:33:18,183 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 3577948919
2025-07-08 05:33:18,196 - INFO - orders - [PERF] Order creation: 0.0134s
2025-07-08 05:33:18,196 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 05:33:18,196 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:18,197 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:18,197 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:18,198 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:18,199 - INFO - orders - [PERF] TOTAL place_order: 0.3760s
2025-07-08 05:33:18,239 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:33:19,738 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:22,057 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:24,407 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:25,604 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: SELL
2025-07-08 05:33:25,944 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8930600000', 'o': '0.8930600000'}
2025-07-08 05:33:25,944 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8930600000, ask=0.89314930600000
2025-07-08 05:33:25,944 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8930600000, ask=0.89314930600000
2025-07-08 05:33:25,944 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 05:33:25,945 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:25,945 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:25,945 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:25,945 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:25,946 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:25,946 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:25,946 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 05:33:25,946 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: SELL, Qty: 0.01, Price: 0.8930600000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 05:33:25,953 - INFO - orders - [PERF] Order processing: 0.3482s
2025-07-08 05:33:25,953 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '7924990238', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8930600000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 05:33:25,953 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 7924990238
2025-07-08 05:33:25,966 - INFO - orders - [PERF] Order creation: 0.0131s
2025-07-08 05:33:25,966 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 05:33:25,966 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:25,967 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:25,967 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:25,968 - INFO - orders - [PERF] TOTAL place_order: 0.3641s
2025-07-08 05:33:25,968 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:26,001 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:33:26,659 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:29,012 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:29,166 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 05:33:29,491 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931000000', 'o': '0.8930600000'}
2025-07-08 05:33:29,491 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:29,491 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:29,492 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:29,493 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 05:33:29,493 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89318931000000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 05:33:29,507 - INFO - orders - [PERF] Order processing: 0.3405s
2025-07-08 05:33:29,507 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '1519912958', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89318931000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 05:33:29,507 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 1519912958
2025-07-08 05:33:29,520 - INFO - orders - [PERF] Order creation: 0.0130s
2025-07-08 05:33:29,520 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 05:33:29,520 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:29,521 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:29,521 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:29,523 - INFO - orders - [PERF] TOTAL place_order: 0.3570s
2025-07-08 05:33:29,524 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:29,562 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:33:31,285 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:33,624 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:34,677 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: SELL
2025-07-08 05:33:35,026 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931000000', 'o': '0.8930700000'}
2025-07-08 05:33:35,026 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:35,026 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:35,027 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 05:33:35,027 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:35,027 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:35,027 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:35,027 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:35,028 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:35,028 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:35,028 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 05:33:35,028 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: SELL, Qty: 0.01, Price: 0.8931000000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 05:33:35,037 - INFO - orders - [PERF] Order processing: 0.3583s
2025-07-08 05:33:35,037 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '2067016150', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8931000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 05:33:35,037 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 2067016150
2025-07-08 05:33:35,046 - INFO - orders - [PERF] Order creation: 0.0091s
2025-07-08 05:33:35,046 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 05:33:35,046 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:35,047 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:35,047 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:35,048 - INFO - orders - [PERF] TOTAL place_order: 0.3703s
2025-07-08 05:33:35,049 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:35,077 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:33:35,875 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:37,121 - INFO - orders - Order placement request received - User: 1, Symbol: AUDCAD, Type: BUY
2025-07-08 05:33:37,454 - INFO - orders - [MARGIN_CALC] Market data for AUDCAD: {'b': '0.8931000000', 'o': '0.8930700000'}
2025-07-08 05:33:37,454 - WARNING - orders - [MARGIN_CALC] Missing ask price for AUDCAD, using bid price with spread: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:37,454 - INFO - orders - [MARGIN_CALC] Using prices for AUDCAD: bid=0.8931000000, ask=0.89318931000000
2025-07-08 05:33:37,455 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.93 CAD to USD for margin_calculation (user_id: 1, position: None)
2025-07-08 05:33:37,455 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:37,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.93 CAD / 1.3645100000 = 6.544473840426233593011410690 USD
2025-07-08 05:33:37,456 - INFO - orders - [MARGIN_CALC_OPTIMIZED] Symbol: AUDCAD, Type: BUY, Qty: 0.01, Price: 0.89318931000000, Margin: 6.544473840426233593011410690, Commission: 0.10
2025-07-08 05:33:37,466 - INFO - orders - [PERF] Order processing: 0.3432s
2025-07-08 05:33:37,466 - DEBUG - orders - [DEBUG][create_user_order] Received order_data: {'order_id': '6354103775', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.89318931000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.00'), 'margin': Decimal('6.544473840426233593011410690'), 'commission': Decimal('0.10'), 'status': 'OPEN', 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'close_id': None}
2025-07-08 05:33:37,466 - DEBUG - orders - [DEBUG][create_user_order] Created OrderActionHistory record for order_id: 6354103775
2025-07-08 05:33:37,476 - INFO - orders - [PERF] Order creation: 0.0096s
2025-07-08 05:33:37,476 - INFO - orders - is_barclays_live_user in place_order: False
2025-07-08 05:33:37,476 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:37,477 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:37,477 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:37,478 - INFO - orders - [PERF] TOTAL place_order: 0.3570s
2025-07-08 05:33:37,478 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:37,521 - ERROR - orders - Error updating portfolio: calculate_user_portfolio() missing 1 required positional argument: 'redis_client'
2025-07-08 05:33:38,153 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:40,483 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:41,499 - INFO - orders - Order close request received - Order ID: 6354103775, User ID: 1, Close Price: 0.89307
2025-07-08 05:33:41,499 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313B976F0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:41,499 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:41,499 - INFO - orders - Request to close order 6354103775 for user 1 (user_type: demo) with price 0.89307. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:41,509 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:41,520 - INFO - orders - Existing entry commission for order 6354103775: 0.10000000
2025-07-08 05:33:41,520 - INFO - orders - Commission calculation for order 6354103775: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:41,520 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.119310000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 6354103775)
2025-07-08 05:33:41,520 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:41,521 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.119310000000000000000000 CAD / 1.3645100000 = -0.08743798139991645352544136723 USD
2025-07-08 05:33:41,534 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24916.27000000, margin=13.09
2025-07-08 05:33:41,535 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24916.27000000, margin=13.09
2025-07-08 05:33:41,535 - INFO - orders - User data cache updated for user 1
2025-07-08 05:33:41,535 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 05:33:41,535 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 05:33:41,537 - INFO - orders - Fetched 4 open orders for user 1
2025-07-08 05:33:41,539 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 05:33:41,539 - INFO - orders - Updated static orders cache for user 1 with 4 open orders and 1 pending orders
2025-07-08 05:33:41,539 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:41,540 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:41,540 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:41,542 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:42,079 - INFO - orders - Order close request received - Order ID: 2067016150, User ID: 1, Close Price: 0.8931
2025-07-08 05:33:42,079 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313B94510>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:42,079 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:42,079 - INFO - orders - Request to close order 2067016150 for user 1 (user_type: demo) with price 0.8931. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:42,086 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:42,096 - INFO - orders - Existing entry commission for order 2067016150: 0.10000000
2025-07-08 05:33:42,096 - INFO - orders - Commission calculation for order 2067016150: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:42,096 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0E-24 CAD to USD for PnL on Close (user_id: 1, position: 2067016150)
2025-07-08 05:33:42,096 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:42,097 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 0E-24 CAD / 1.3645100000 = 0E-14 USD
2025-07-08 05:33:42,097 - ERROR - orders - Order 2067016150: PnL conversion failed. Rates missing for CAD/USD.
2025-07-08 05:33:42,097 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1485, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-08 05:33:42,100 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1485, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1556, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-07-08 05:33:42,621 - INFO - orders - Order close request received - Order ID: 1519912958, User ID: 1, Close Price: 0.89306
2025-07-08 05:33:42,621 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313D48E90>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:42,621 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:42,621 - INFO - orders - Request to close order 1519912958 for user 1 (user_type: demo) with price 0.89306. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:42,628 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:42,636 - INFO - orders - Existing entry commission for order 1519912958: 0.10000000
2025-07-08 05:33:42,636 - INFO - orders - Commission calculation for order 1519912958: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:42,636 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.129310000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1519912958)
2025-07-08 05:33:42,636 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:42,636 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:42,636 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:42,636 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:42,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:42,637 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:42,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.129310000000000000000000 CAD / 1.3645100000 = -0.09476661951909476661951909477 USD
2025-07-08 05:33:42,651 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24915.98000000, margin=13.09
2025-07-08 05:33:42,651 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24915.98000000, margin=13.09
2025-07-08 05:33:42,651 - INFO - orders - User data cache updated for user 1
2025-07-08 05:33:42,651 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 05:33:42,651 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 05:33:42,653 - INFO - orders - Fetched 3 open orders for user 1
2025-07-08 05:33:42,655 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 05:33:42,656 - INFO - orders - Updated static orders cache for user 1 with 3 open orders and 1 pending orders
2025-07-08 05:33:42,656 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:42,656 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:42,657 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:42,657 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:42,748 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:43,193 - INFO - orders - Order close request received - Order ID: 7924990238, User ID: 1, Close Price: 0.8931
2025-07-08 05:33:43,193 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313D48B00>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:43,193 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:43,193 - INFO - orders - Request to close order 7924990238 for user 1 (user_type: demo) with price 0.8931. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:43,204 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:43,212 - INFO - orders - Existing entry commission for order 7924990238: 0.10000000
2025-07-08 05:33:43,213 - INFO - orders - Commission calculation for order 7924990238: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.040000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 7924990238)
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:43,213 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.040000000000000000000000 CAD / 1.3645100000 = -0.02931455247671325237631091014 USD
2025-07-08 05:33:43,227 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24915.75000000, margin=6.54
2025-07-08 05:33:43,227 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24915.75000000, margin=6.54
2025-07-08 05:33:43,227 - INFO - orders - User data cache updated for user 1
2025-07-08 05:33:43,227 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 05:33:43,227 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 05:33:43,229 - INFO - orders - Fetched 2 open orders for user 1
2025-07-08 05:33:43,230 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 05:33:43,231 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 1 pending orders
2025-07-08 05:33:43,231 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:43,231 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:43,232 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:43,233 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:43,767 - INFO - orders - Order close request received - Order ID: 3577948919, User ID: 1, Close Price: 0.89306
2025-07-08 05:33:43,767 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313D48B00>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:43,767 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:43,767 - INFO - orders - Request to close order 3577948919 for user 1 (user_type: demo) with price 0.89306. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:43,775 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:43,784 - INFO - orders - Existing entry commission for order 3577948919: 0.10000000
2025-07-08 05:33:43,784 - INFO - orders - Commission calculation for order 3577948919: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.059300000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 3577948919)
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:43,784 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.059300000000000000000000 CAD / 1.3645100000 = -0.04345882404672739664788092429 USD
2025-07-08 05:33:43,796 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24915.51000000, margin=6.54
2025-07-08 05:33:43,796 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24915.51000000, margin=6.54
2025-07-08 05:33:43,796 - INFO - orders - User data cache updated for user 1
2025-07-08 05:33:43,796 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 05:33:43,796 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 05:33:43,798 - INFO - orders - Fetched 1 open orders for user 1
2025-07-08 05:33:43,801 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 05:33:43,802 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-07-08 05:33:43,802 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:43,803 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:43,803 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:43,805 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:45,034 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:47,445 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:48,062 - INFO - orders - Order close request received - Order ID: 2067016150, User ID: 1, Close Price: 0.89305
2025-07-08 05:33:48,062 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000013313D482B0>, type: <class 'app.database.models.DemoUser'>, user_type: demo, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'is_service_account', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-07-08 05:33:48,062 - INFO - orders - Using order model: demo_user_orders for user 1 (user_type: demo)
2025-07-08 05:33:48,062 - INFO - orders - Request to close order 2067016150 for user 1 (user_type: demo) with price 0.89305. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-07-08 05:33:48,069 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-07-08 05:33:48,082 - INFO - orders - Existing entry commission for order 2067016150: 0.10000000
2025-07-08 05:33:48,082 - INFO - orders - Commission calculation for order 2067016150: entry=0.10000000, exit=0.100000000000, total=0.20
2025-07-08 05:33:48,082 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 0.050000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 2067016150)
2025-07-08 05:33:48,082 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-07-08 05:33:48,082 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-07-08 05:33:48,082 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-07-08 05:33:48,082 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-07-08 05:33:48,083 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3645100000'), 'o': Decimal('1.3644600000')}
2025-07-08 05:33:48,083 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3645100000
2025-07-08 05:33:48,083 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 0.050000000000000000000000 CAD / 1.3645100000 = 0.03664319059589156547038863768 USD
2025-07-08 05:33:48,100 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=24915.35000000, margin=0
2025-07-08 05:33:48,100 - INFO - orders - Setting user data cache for user 1 with wallet_balance=24915.35000000, margin=0
2025-07-08 05:33:48,101 - INFO - orders - User data cache updated for user 1
2025-07-08 05:33:48,101 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-07-08 05:33:48,101 - INFO - orders - Using order model: DemoUserOrder
2025-07-08 05:33:48,103 - INFO - orders - Fetched 0 open orders for user 1
2025-07-08 05:33:48,105 - INFO - orders - Fetched 1 pending orders for user 1
2025-07-08 05:33:48,106 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-07-08 05:33:48,106 - INFO - orders - Publishing order update for user 1
2025-07-08 05:33:48,106 - INFO - orders - Publishing user data update for user 1
2025-07-08 05:33:48,107 - INFO - orders - Publishing market data trigger
2025-07-08 05:33:48,108 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:49,641 - INFO - orders - Market data update received, triggering SL/TP check
2025-07-08 05:33:51,949 - INFO - orders - Market data update received, triggering SL/TP check
